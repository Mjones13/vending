üéØ Test Execution Time Measurement
==================================================

üöÄ Pre-commit Tests (Fast Feedback)
--------------------------------------------------

üìä Measuring: Linting
Command: npm run lint

> newsite@0.1.0 lint
> next lint


./pages/index.tsx
71:6  Warning: React Hook useEffect has missing dependencies: 'animationState' and 'rotatingWords'. Either include them or remove the dependency array.  react-hooks/exhaustive-deps

info  - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/app/api-reference/config/eslint#disabling-rules
‚úÖ Linting: 2.25s (exit code: 0)

üìä Measuring: Type Check
Command: npm run type-check

> newsite@0.1.0 type-check
> tsc --noEmit

‚úÖ Type Check: 0.99s (exit code: 0)

üìä Measuring: Critical Tests
Command: npm run test:critical-path

> newsite@0.1.0 test:critical-path
> jest --testNamePattern='(critical|smoke)' --verbose

PASS __tests__/components/Layout.test.tsx
  Layout Component
    Basic Rendering
      ‚úì critical: should render children content correctly (36 ms)
      ‚úì critical: should render header with logo (11 ms)
      ‚óã skipped should render navigation menu
      ‚óã skipped should render footer
    Navigation Functionality
      ‚óã skipped should have correct href attributes for navigation links
      ‚óã skipped should have correct href for logo link
    Responsive Behavior
      ‚óã skipped should show mobile menu button on small screens
      ‚óã skipped should hide navigation on mobile screens when not active
      ‚óã skipped should show navigation on large screens
      ‚óã skipped should toggle mobile menu when button is clicked
    Header Scroll Effects
      ‚óã skipped should add backdrop blur class when scrolled
      ‚óã skipped should maintain fixed positioning on scroll
    Logo Specifications
      ‚óã skipped should display logo with correct dimensions on desktop
      ‚óã skipped should maintain aspect ratio on mobile
    Accessibility
      ‚óã skipped should have proper heading hierarchy
      ‚óã skipped should support keyboard navigation
      ‚óã skipped should have proper ARIA labels for mobile menu
    Dropdown Menu Functionality
      ‚óã skipped should show dropdown on hover for services
      ‚óã skipped should hide dropdown when mouse leaves

Test Suites: 7 skipped, 1 passed, 1 of 8 total
Tests:       117 skipped, 2 passed, 119 total
Snapshots:   0 total
Time:        1.645 s
Ran all test suites with tests matching "(critical|smoke)".
‚úÖ Critical Tests: 2.68s (exit code: 0)

üî• Pre-push Tests (Comprehensive)
--------------------------------------------------

üìä Measuring: Unit Tests
Command: npm run test:unit

> newsite@0.1.0 test:unit
> jest --testPathPattern='__tests__/(components|hooks|utils)' --verbose

FAIL __tests__/components/Layout.test.tsx (30.566 s)
  Layout Component
    Basic Rendering
      ‚úì critical: should render children content correctly (35 ms)
      ‚úì critical: should render header with logo (12 ms)
      ‚úì should render navigation menu (91 ms)
      ‚úì should render footer (10 ms)
    Navigation Functionality
      ‚úì should have correct href attributes for navigation links (27 ms)
      ‚úì should have correct href for logo link (9 ms)
    Responsive Behavior
      ‚úì should show mobile menu button on small screens (8 ms)
      ‚úì should hide navigation on mobile screens when not active (7 ms)
      ‚úì should show navigation on large screens (10 ms)
      ‚úï should toggle mobile menu when button is clicked (30030 ms)
    Header Scroll Effects
      ‚úï should add backdrop blur class when scrolled (9 ms)
      ‚úï should maintain fixed positioning on scroll (4 ms)
    Logo Specifications
      ‚úï should display logo with correct dimensions on desktop (3 ms)
      ‚úï should maintain aspect ratio on mobile (3 ms)
    Accessibility
      ‚úï should have proper heading hierarchy (2 ms)
      ‚úï should support keyboard navigation (2 ms)
      ‚úï should have proper ARIA labels for mobile menu (1 ms)
    Dropdown Menu Functionality
      ‚úï should show dropdown on hover for services (17 ms)
      ‚úï should hide dropdown when mouse leaves (14 ms)

  ‚óè Layout Component ‚Ä∫ Responsive Behavior ‚Ä∫ should toggle mobile menu when button is clicked

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      179 |     })
      180 |
    > 181 |     it('should toggle mobile menu when button is clicked', async () => {
          |     ^
      182 |       simulateScreenSize(SCREEN_SIZES.mobile.width, SCREEN_SIZES.mobile.height)
      183 |       
      184 |       render(

      at it (__tests__/components/Layout.test.tsx:181:5)
      at describe (__tests__/components/Layout.test.tsx:132:3)
      at Object.describe (__tests__/components/Layout.test.tsx:12:1)

  ‚óè Layout Component ‚Ä∫ Header Scroll Effects ‚Ä∫ should add backdrop blur class when scrolled

    TestingLibraryElementError: Unable to find an accessible element with the role "banner"

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      229 |       )
      230 |       
    > 231 |       const header = screen.getByRole('banner')
          |                             ^
      232 |       
      233 |       // Simulate scroll event with act() to handle React state updates
      234 |       await act(async () => {

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (__tests__/components/Layout.test.tsx:231:29)

  ‚óè Layout Component ‚Ä∫ Header Scroll Effects ‚Ä∫ should maintain fixed positioning on scroll

    TestingLibraryElementError: Unable to find an accessible element with the role "banner"

    There are no accessible roles. But there might be some inaccessible roles. If you wish to access them, then set the `hidden` option to `true`. Learn more about this here: https://testing-library.com/docs/dom-testing-library/api-queries#byrole

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      254 |       )
      255 |       
    > 256 |       const header = screen.getByRole('banner')
          |                             ^
      257 |       
      258 |       // Verify header has fixed positioning class initially
      259 |       // Note: Testing CSS class presence instead of computed styles due to styled-jsx + Jest limitations

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (__tests__/components/Layout.test.tsx:256:29)

  ‚óè Layout Component ‚Ä∫ Logo Specifications ‚Ä∫ should display logo with correct dimensions on desktop

    TestingLibraryElementError: Unable to find an element with the alt text: /golden coast amenities/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      289 |       )
      290 |       
    > 291 |       const logo = screen.getByAltText(/golden coast amenities/i)
          |                           ^
      292 |       expect(logo).toHaveAttribute('width', '60')
      293 |       expect(logo).toHaveAttribute('height', '20')
      294 |     })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByAltText (__tests__/components/Layout.test.tsx:291:27)

  ‚óè Layout Component ‚Ä∫ Logo Specifications ‚Ä∫ should maintain aspect ratio on mobile

    TestingLibraryElementError: Unable to find an element with the alt text: /golden coast amenities/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      303 |       )
      304 |       
    > 305 |       const logo = screen.getByAltText(/golden coast amenities/i)
          |                           ^
      306 |       expect(logo).toHaveAttribute('width', '60')
      307 |       expect(logo).toHaveAttribute('height', '20')
      308 |       expect(logo).toHaveClass('logo-image')

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByAltText (__tests__/components/Layout.test.tsx:305:27)

  ‚óè Layout Component ‚Ä∫ Accessibility ‚Ä∫ should have proper heading hierarchy

    TestingLibraryElementError: Unable to find a label with the text of: /home/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      319 |       
      320 |       // Logo link should have accessible name
    > 321 |       const logoLink = screen.getByLabelText(/home/i)
          |                               ^
      322 |       expect(logoLink).toBeInTheDocument()
      323 |       
      324 |       // Navigation should be properly labeled

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (__tests__/components/Layout.test.tsx:321:31)

  ‚óè Layout Component ‚Ä∫ Accessibility ‚Ä∫ should support keyboard navigation

    TestingLibraryElementError: Unable to find a label with the text of: /home/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      338 |       
      339 |       // Get first focusable link (logo)
    > 340 |       const logoLink = screen.getByLabelText(/home/i)
          |                               ^
      341 |       
      342 |       // Tab to first navigation link
      343 |       await userEvent.tab()

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (__tests__/components/Layout.test.tsx:340:31)

  ‚óè Layout Component ‚Ä∫ Accessibility ‚Ä∫ should have proper ARIA labels for mobile menu

    TestingLibraryElementError: Unable to find a label with the text of: /toggle menu/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      354 |       )
      355 |       
    > 356 |       const mobileMenuButton = screen.getByLabelText(/toggle menu/i)
          |                                       ^
      357 |       expect(mobileMenuButton).toHaveAttribute('aria-label', 'Toggle menu')
      358 |       expect(mobileMenuButton).toHaveAttribute('aria-expanded', 'false')
      359 |     })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getAllByLabelText (node_modules/@testing-library/dom/dist/queries/label-text.js:111:38)
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByLabelText (__tests__/components/Layout.test.tsx:356:39)

  ‚óè Layout Component ‚Ä∫ Dropdown Menu Functionality ‚Ä∫ should show dropdown on hover for services

    Unable to find role="navigation"

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      369 |       
      370 |       // Wait for component to fully mount
    > 371 |       await waitFor(() => {
          |                    ^
      372 |         expect(container.innerHTML).not.toBe('<div></div>')
      373 |         expect(container.innerHTML).not.toBe('<div />')
      374 |         expect(screen.getByRole('navigation')).toBeInTheDocument()

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (__tests__/components/Layout.test.tsx:371:20)

  ‚óè Layout Component ‚Ä∫ Dropdown Menu Functionality ‚Ä∫ should hide dropdown when mouse leaves

    Unable to find role="navigation"

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div />[39m
    [36m</body>[39m

      399 |       
      400 |       // Wait for component to fully mount
    > 401 |       await waitFor(() => {
          |                    ^
      402 |         expect(container.innerHTML).not.toBe('<div></div>')
      403 |         expect(container.innerHTML).not.toBe('<div />')
      404 |         expect(screen.getByRole('navigation')).toBeInTheDocument()

      at waitForWrapper (node_modules/@testing-library/dom/dist/wait-for.js:163:27)
      at Object.<anonymous> (__tests__/components/Layout.test.tsx:401:20)

Test Suites: 1 failed, 1 total
Tests:       10 failed, 9 passed, 19 total
Snapshots:   0 total
Time:        31.045 s
Ran all test suites matching /__tests__\/(components|hooks|utils)/i.
‚ùå Unit Tests: 31.69s (exit code: 1)

üìä Measuring: Integration Tests
Command: npm run test:integration

> newsite@0.1.0 test:integration
> jest --testPathPattern='__tests__/pages' --verbose

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      76 |       // If animation gets stuck, reset to visible state
      77 |       if (animationState !== 'visible') {
    > 78 |         setAnimationState('visible');
         |         ^
      79 |       }
      80 |     }, 2000); // Reset if stuck for more than 2 seconds
      81 |     

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:78:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

FAIL __tests__/pages/index.test.tsx
  Home Page
    Basic Rendering
      ‚úì should render the hero section (84 ms)
      ‚úì should render hero description (36 ms)
      ‚úì should render call-to-action button (88 ms)
      ‚úì should render hero stats (30 ms)
    Rotating Text Animation
      ‚úì should display initial rotating word (23 ms)
      ‚úì should have rotating text container with proper styling (23 ms)
      ‚úï should cycle through all rotating words (275 ms)
      ‚úì should display each word in the rotation sequence (851 ms)
      ‚úï should apply correct animation state classes (180 ms)
      ‚úï should maintain text alignment with static text (24 ms)
      ‚úï should have proper container dimensions to prevent cutoff (24 ms)
    Hero Image
      ‚úï should render hero image with proper alt text (26 ms)
    Hero Actions
      ‚úì should navigate to request demo page when button clicked (36 ms)
      ‚úï should have contact phone number link (41 ms)
    Services Showcase
      ‚úì should render service cards (29 ms)
      ‚úì should have service navigation buttons (36 ms)
    Company Logos Animation
      ‚úì should render company logos (28 ms)
      ‚úì should trigger staggered logo animations (42 ms)
    Responsive Design
      ‚úì should adapt hero layout for mobile (25 ms)
    Accessibility
      ‚úì should have proper heading hierarchy (30 ms)
      ‚úï should have proper image alt texts (28 ms)
      ‚úï should have accessible buttons and links (72 ms)

  ‚óè Home Page ‚Ä∫ Rotating Text Animation ‚Ä∫ should cycle through all rotating words

    expect(element).toHaveTextContent()

    Expected element to have text content:
      Apartments
    Received:
      Workplaces

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<header[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
            [33mdata-testid[39m=[32m"layout"[39m
            [33mrole[39m=[32m"banner"[39m
          [36m>[39m
            [36m<nav[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
              [33mrole[39m=[32m"navigation"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
              [36m>[39m
                [36m<a[39m
                  [33maria-label[39m=[32m"Home"[39m
                  [33mclass[39m=[32m"logo"[39m
                  [33mhref[39m=[32m"/"[39m
                [36m>[39m
                  [36m<img[39m
                    [33malt[39m=[32m"Golden Coast Amenities"[39m
                    [33mclass[39m=[32m"logo-image"[39m
                    [33mheight[39m=[32m"20"[39m
                    [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                    [33mwidth[39m=[32m"60"[39m
                  [36m/>[39m
                [36m</a>[39m
                [36m<button[39m
                  [33maria-expanded[39m=[32m"false"[39m
                  [33maria-label[39m=[32m"Toggle menu"[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                [36m</button>[39m
                [36m<ul[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                  [33mdata-testid[39m=[32m"mobile-menu"[39m
                [36m>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link active"[39m
                      [33mhref[39m=[32m"/"[39m
                    [36m>[39m
                      [0mHome[0m
                    [36m</a>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                      [33mhref[39m=[32m"/coffee-services"[39m
                    [36m>[39m
                      [0mServices[0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                      [36m>[39m
                        [0m‚ñº[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<ul[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                    [36m>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services"[39m
                        [36m>[39m
                          [0mCoffee Services[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/mini-markets"[39m
                        [36m>[39m
                          [0mMini Markets[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/vending-machines"[39m
                        [36m>[39m
                          [0mVending Machines[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                      [36m/>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                        [36m>[39m
                          [0mGround & Whole Bean[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                        [36m>[39m
                          [0mAirpot Portion Packets[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/accessories"[39m
                        [36m>[39m
                          [0mAccessories[0m
                        [36m</a>[39m
                      [36m</li>[39m
                    [36m</ul>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link"[39m
                      [33mhref[39m=[32m"/shop"[39m
                    [36m>[39m
                      [0mShop[0m
                    [36m</a>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                      [33mhref[39m=[32m"/about"[39m
                    [36m>[39m
                      [0mCompany[0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                      [36m>[39m
                        [0m‚ñº[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<ul[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                    [36m>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/about"[39m
                        [36m>[39m
                  ...

      26 |     await waitFor(
      27 |       () => {
    > 28 |         expect(this.element).toHaveTextContent(expectedWord)
         |                              ^
      29 |       },
      30 |       { timeout }
      31 |     )

      at toHaveTextContent (test-utils/animation-testing.ts:28:30)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Home Page ‚Ä∫ Rotating Text Animation ‚Ä∫ should apply correct animation state classes

    expect(element).toHaveClass("rotating-text-entering")

    Expected the element to have class:
      rotating-text-entering
    Received:
      jsx-aaab183f6ae3640f rotating-text rotating-text-exiting

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<header[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
            [33mdata-testid[39m=[32m"layout"[39m
            [33mrole[39m=[32m"banner"[39m
          [36m>[39m
            [36m<nav[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
              [33mrole[39m=[32m"navigation"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
              [36m>[39m
                [36m<a[39m
                  [33maria-label[39m=[32m"Home"[39m
                  [33mclass[39m=[32m"logo"[39m
                  [33mhref[39m=[32m"/"[39m
                [36m>[39m
                  [36m<img[39m
                    [33malt[39m=[32m"Golden Coast Amenities"[39m
                    [33mclass[39m=[32m"logo-image"[39m
                    [33mheight[39m=[32m"20"[39m
                    [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                    [33mwidth[39m=[32m"60"[39m
                  [36m/>[39m
                [36m</a>[39m
                [36m<button[39m
                  [33maria-expanded[39m=[32m"false"[39m
                  [33maria-label[39m=[32m"Toggle menu"[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                [36m</button>[39m
                [36m<ul[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                  [33mdata-testid[39m=[32m"mobile-menu"[39m
                [36m>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link active"[39m
                      [33mhref[39m=[32m"/"[39m
                    [36m>[39m
                      [0mHome[0m
                    [36m</a>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                      [33mhref[39m=[32m"/coffee-services"[39m
                    [36m>[39m
                      [0mServices[0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                      [36m>[39m
                        [0m‚ñº[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<ul[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                    [36m>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services"[39m
                        [36m>[39m
                          [0mCoffee Services[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/mini-markets"[39m
                        [36m>[39m
                          [0mMini Markets[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/vending-machines"[39m
                        [36m>[39m
                          [0mVending Machines[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                      [36m/>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                        [36m>[39m
                          [0mGround & Whole Bean[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                        [36m>[39m
                          [0mAirpot Portion Packets[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/accessories"[39m
                        [36m>[39m
                          [0mAccessories[0m
                        [36m</a>[39m
                      [36m</li>[39m
                    [36m</ul>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link"[39m
                      [33mhref[39m=[32m"/shop"[39m
                    [36m>[39m
                      [0mShop[0m
                    [36m</a>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                      [33mhref[39m=[32m"/about"[39m
                    [36m>[39m
                      [0mCompany[0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                      [36m>[39m
                        [0m‚ñº[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<ul[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                    [36m>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/about"[39m
                        [36m>[39m
                  ...

      77 |     await waitFor(
      78 |       () => {
    > 79 |         expect(this.element).toHaveClass(enteringClass)
         |                              ^
      80 |         expect(this.element).not.toHaveClass(exitingClass)
      81 |       },
      82 |       { timeout }

      at toHaveClass (test-utils/animation-testing.ts:79:30)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Home Page ‚Ä∫ Rotating Text Animation ‚Ä∫ should maintain text alignment with static text

    expect(element).toHaveStyle()

    - Expected

    - display: inline-block;
    - position: relative;

      106 |       // Container should have proper positioning
      107 |       const container = rotatingText.parentElement
    > 108 |       expect(container).toHaveStyle({ 
          |                         ^
      109 |         display: 'inline-block',
      110 |         position: 'relative'
      111 |       })

      at Object.toHaveStyle (__tests__/pages/index.test.tsx:108:25)

  ‚óè Home Page ‚Ä∫ Rotating Text Animation ‚Ä∫ should have proper container dimensions to prevent cutoff

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 280
    Received:    NaN

      121 |       const computedStyle = window.getComputedStyle(container!)
      122 |       const minWidth = parseInt(computedStyle.minWidth)
    > 123 |       expect(minWidth).toBeGreaterThanOrEqual(280) // Based on our CSS fix
          |                        ^
      124 |     })
      125 |   })
      126 |

      at Object.toBeGreaterThanOrEqual (__tests__/pages/index.test.tsx:123:24)

  ‚óè Home Page ‚Ä∫ Hero Image ‚Ä∫ should render hero image with proper alt text

    TestingLibraryElementError: Unable to find an element with the alt text: /modern office breakroom/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<header[39m
          [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
          [33mdata-testid[39m=[32m"layout"[39m
          [33mrole[39m=[32m"banner"[39m
        [36m>[39m
          [36m<nav[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
            [33mrole[39m=[32m"navigation"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
            [36m>[39m
              [36m<a[39m
                [33maria-label[39m=[32m"Home"[39m
                [33mclass[39m=[32m"logo"[39m
                [33mhref[39m=[32m"/"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Golden Coast Amenities"[39m
                  [33mclass[39m=[32m"logo-image"[39m
                  [33mheight[39m=[32m"20"[39m
                  [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                  [33mwidth[39m=[32m"60"[39m
                [36m/>[39m
              [36m</a>[39m
              [36m<button[39m
                [33maria-expanded[39m=[32m"false"[39m
                [33maria-label[39m=[32m"Toggle menu"[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
              [36m</button>[39m
              [36m<ul[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                [33mdata-testid[39m=[32m"mobile-menu"[39m
              [36m>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link active"[39m
                    [33mhref[39m=[32m"/"[39m
                  [36m>[39m
                    [0mHome[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/coffee-services"[39m
                  [36m>[39m
                    [0mServices[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m‚ñº[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services"[39m
                      [36m>[39m
                        [0mCoffee Services[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/mini-markets"[39m
                      [36m>[39m
                        [0mMini Markets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/vending-machines"[39m
                      [36m>[39m
                        [0mVending Machines[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                    [36m/>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                      [36m>[39m
                        [0mGround & Whole Bean[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                      [36m>[39m
                        [0mAirpot Portion Packets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/accessories"[39m
                      [36m>[39m
                        [0mAccessories[0m
                      [36m</a>[39m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link"[39m
                    [33mhref[39m=[32m"/shop"[39m
                  [36m>[39m
                    [0mShop[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/about"[39m
                  [36m>[39m
                    [0mCompany[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m‚ñº[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/about"[39m
                      [36m>[39m
                        [0mAbout Us[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/blog"[39m
                      [36m>[39m
                        [0mBlog[0m
            ...

      129 |       render(<Home />)
      130 |       
    > 131 |       const heroImage = screen.getByAltText(/modern office breakroom/i)
          |                                ^
      132 |       expect(heroImage).toBeInTheDocument()
      133 |       expect(heroImage).toHaveAttribute('src', '/images/hero-backgrounds/home/office-breakroom-hero.jpg')
      134 |     })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByAltText (__tests__/pages/index.test.tsx:131:32)

  ‚óè Home Page ‚Ä∫ Hero Actions ‚Ä∫ should have contact phone number link

    TestingLibraryElementError: Found multiple elements with the role "link" and name `/909.258.9848/i`

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<a[39m
      [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
      [33mhref[39m=[32m"tel:909.258.9848"[39m
    [36m>[39m
      [0m909.258.9848[0m
    [36m</a>[39m

    Ignored nodes: comments, script, style
    [36m<a[39m
      [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-number"[39m
      [33mhref[39m=[32m"tel:909.258.9848"[39m
    [36m>[39m
      [0m909.258.9848[0m
    [36m</a>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<header[39m
          [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
          [33mdata-testid[39m=[32m"layout"[39m
          [33mrole[39m=[32m"banner"[39m
        [36m>[39m
          [36m<nav[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
            [33mrole[39m=[32m"navigation"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
            [36m>[39m
              [36m<a[39m
                [33maria-label[39m=[32m"Home"[39m
                [33mclass[39m=[32m"logo"[39m
                [33mhref[39m=[32m"/"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Golden Coast Amenities"[39m
                  [33mclass[39m=[32m"logo-image"[39m
                  [33mheight[39m=[32m"20"[39m
                  [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                  [33mwidth[39m=[32m"60"[39m
                [36m/>[39m
              [36m</a>[39m
              [36m<button[39m
                [33maria-expanded[39m=[32m"false"[39m
                [33maria-label[39m=[32m"Toggle menu"[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
              [36m</button>[39m
              [36m<ul[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                [33mdata-testid[39m=[32m"mobile-menu"[39m
              [36m>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link active"[39m
                    [33mhref[39m=[32m"/"[39m
                  [36m>[39m
                    [0mHome[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/coffee-services"[39m
                  [36m>[39m
                    [0mServices[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m‚ñº[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services"[39m
                      [36m>[39m
                        [0mCoffee Services[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/mini-markets"[39m
                      [36m>[39m
                        [0mMini Markets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/vending-machines"[39m
                      [36m>[39m
                        [0mVending Machines[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                    [36m/>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                      [36m>[39m
                        [0mGround & Whole Bean[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                      [36m>[39m
                        [0mAirpot Portion Packets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/accessories"[39m
                      [36m>[39m
                        [0mAccessories[0m
                      [36m</a>[39m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link"[39m
                    [33mhref[39m=[32m"/shop"[39m
                  [36m>[39m
                    [0mShop[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/about"[39m
                  [36m>[39m
                    [0mCompany[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m‚ñº[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/about"[39m
                      [36m>[39m
                        [0mAbout Us[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/blog"[39m
                      [36m>[39m
                        [0mBlog[0m
            ...

      148 |       render(<Home />)
      149 |       
    > 150 |       const phoneLink = screen.getByRole('link', { name: /909.258.9848/i })
          |                                ^
      151 |       expect(phoneLink).toBeInTheDocument()
      152 |       expect(phoneLink).toHaveAttribute('href', 'tel:909.258.9848')
      153 |     })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (__tests__/pages/index.test.tsx:150:32)

  ‚óè Home Page ‚Ä∫ Accessibility ‚Ä∫ should have proper image alt texts

    TestingLibraryElementError: Unable to find an element with the alt text: /modern office breakroom/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<header[39m
          [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
          [33mdata-testid[39m=[32m"layout"[39m
          [33mrole[39m=[32m"banner"[39m
        [36m>[39m
          [36m<nav[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
            [33mrole[39m=[32m"navigation"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
            [36m>[39m
              [36m<a[39m
                [33maria-label[39m=[32m"Home"[39m
                [33mclass[39m=[32m"logo"[39m
                [33mhref[39m=[32m"/"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Golden Coast Amenities"[39m
                  [33mclass[39m=[32m"logo-image"[39m
                  [33mheight[39m=[32m"20"[39m
                  [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                  [33mwidth[39m=[32m"60"[39m
                [36m/>[39m
              [36m</a>[39m
              [36m<button[39m
                [33maria-expanded[39m=[32m"false"[39m
                [33maria-label[39m=[32m"Toggle menu"[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
              [36m</button>[39m
              [36m<ul[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                [33mdata-testid[39m=[32m"mobile-menu"[39m
              [36m>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link active"[39m
                    [33mhref[39m=[32m"/"[39m
                  [36m>[39m
                    [0mHome[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/coffee-services"[39m
                  [36m>[39m
                    [0mServices[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m‚ñº[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services"[39m
                      [36m>[39m
                        [0mCoffee Services[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/mini-markets"[39m
                      [36m>[39m
                        [0mMini Markets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/vending-machines"[39m
                      [36m>[39m
                        [0mVending Machines[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                    [36m/>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                      [36m>[39m
                        [0mGround & Whole Bean[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                      [36m>[39m
                        [0mAirpot Portion Packets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/accessories"[39m
                      [36m>[39m
                        [0mAccessories[0m
                      [36m</a>[39m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link"[39m
                    [33mhref[39m=[32m"/shop"[39m
                  [36m>[39m
                    [0mShop[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/about"[39m
                  [36m>[39m
                    [0mCompany[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m‚ñº[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/about"[39m
                      [36m>[39m
                        [0mAbout Us[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/blog"[39m
                      [36m>[39m
                        [0mBlog[0m
            ...

      223 |       render(<Home />)
      224 |       
    > 225 |       expect(screen.getByAltText(/modern office breakroom/i)).toBeInTheDocument()
          |                     ^
      226 |       expect(screen.getByAltText('Disney')).toBeInTheDocument()
      227 |     })
      228 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByAltText (__tests__/pages/index.test.tsx:225:21)

  ‚óè Home Page ‚Ä∫ Accessibility ‚Ä∫ should have accessible buttons and links

    TestingLibraryElementError: Found multiple elements with the role "link" and name `/909.258.9848/i`

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<a[39m
      [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
      [33mhref[39m=[32m"tel:909.258.9848"[39m
    [36m>[39m
      [0m909.258.9848[0m
    [36m</a>[39m

    Ignored nodes: comments, script, style
    [36m<a[39m
      [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-number"[39m
      [33mhref[39m=[32m"tel:909.258.9848"[39m
    [36m>[39m
      [0m909.258.9848[0m
    [36m</a>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<header[39m
          [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
          [33mdata-testid[39m=[32m"layout"[39m
          [33mrole[39m=[32m"banner"[39m
        [36m>[39m
          [36m<nav[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
            [33mrole[39m=[32m"navigation"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
            [36m>[39m
              [36m<a[39m
                [33maria-label[39m=[32m"Home"[39m
                [33mclass[39m=[32m"logo"[39m
                [33mhref[39m=[32m"/"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Golden Coast Amenities"[39m
                  [33mclass[39m=[32m"logo-image"[39m
                  [33mheight[39m=[32m"20"[39m
                  [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                  [33mwidth[39m=[32m"60"[39m
                [36m/>[39m
              [36m</a>[39m
              [36m<button[39m
                [33maria-expanded[39m=[32m"false"[39m
                [33maria-label[39m=[32m"Toggle menu"[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
              [36m</button>[39m
              [36m<ul[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                [33mdata-testid[39m=[32m"mobile-menu"[39m
              [36m>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link active"[39m
                    [33mhref[39m=[32m"/"[39m
                  [36m>[39m
                    [0mHome[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/coffee-services"[39m
                  [36m>[39m
                    [0mServices[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m‚ñº[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services"[39m
                      [36m>[39m
                        [0mCoffee Services[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/mini-markets"[39m
                      [36m>[39m
                        [0mMini Markets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/vending-machines"[39m
                      [36m>[39m
                        [0mVending Machines[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                    [36m/>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                      [36m>[39m
                        [0mGround & Whole Bean[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                      [36m>[39m
                        [0mAirpot Portion Packets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/accessories"[39m
                      [36m>[39m
                        [0mAccessories[0m
                      [36m</a>[39m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link"[39m
                    [33mhref[39m=[32m"/shop"[39m
                  [36m>[39m
                    [0mShop[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/about"[39m
                  [36m>[39m
                    [0mCompany[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m‚ñº[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/about"[39m
                      [36m>[39m
                        [0mAbout Us[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/blog"[39m
                      [36m>[39m
                        [0mBlog[0m
            ...

      233 |       expect(demoButton).toBeInTheDocument()
      234 |       
    > 235 |       const phoneLink = screen.getByRole('link', { name: /909.258.9848/i })
          |                                ^
      236 |       expect(phoneLink).toBeInTheDocument()
      237 |     })
      238 |   })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (__tests__/pages/index.test.tsx:235:32)

Test Suites: 1 failed, 1 total
Tests:       8 failed, 14 passed, 22 total
Snapshots:   0 total
Time:        3.038 s
Ran all test suites matching /__tests__\/pages/i.
‚ùå Integration Tests: 4.06s (exit code: 1)

üìä Measuring: Animation Tests
Command: npm run test:animations

> newsite@0.1.0 test:animations
> jest --testPathPattern='__tests__/animations' --verbose

  console.error
    Received `true` for a non-boolean attribute `fill`.
    
    If you want to write it to the DOM, pass a string instead: fill="true" or fill={value.toString()}.

      62 |   describe('Rotation Timing Accuracy', () => {
      63 |     it('should rotate words at exactly 3-second intervals', async () => {
    > 64 |       const { getByTestId } = render(<Home />);
         |                                     ^
      65 |       const rotatingText = getByTestId('rotating-text');
      66 |       
      67 |       const observer = new WordSequenceObserver(rotatingText);

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-timing.test.tsx:64:37)

  console.error
    Received `true` for a non-boolean attribute `priority`.
    
    If you want to write it to the DOM, pass a string instead: priority="true" or priority={value.toString()}.

      62 |   describe('Rotation Timing Accuracy', () => {
      63 |     it('should rotate words at exactly 3-second intervals', async () => {
    > 64 |       const { getByTestId } = render(<Home />);
         |                                     ^
      65 |       const rotatingText = getByTestId('rotating-text');
      66 |       
      67 |       const observer = new WordSequenceObserver(rotatingText);

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-timing.test.tsx:64:37)

  console.error
    Received `true` for a non-boolean attribute `fill`.
    
    If you want to write it to the DOM, pass a string instead: fill="true" or fill={value.toString()}.

      74 |   describe('Baseline Alignment', () => {
      75 |     it('should align rotating text baseline with static text baseline', async () => {
    > 76 |       const { getByTestId } = render(<Home />);
         |                                     ^
      77 |       
      78 |       const staticText = getByTestId('static-text');
      79 |       const rotatingText = getByTestId('rotating-text');

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-alignment.test.tsx:76:37)

  console.error
    Received `true` for a non-boolean attribute `priority`.
    
    If you want to write it to the DOM, pass a string instead: priority="true" or priority={value.toString()}.

      74 |   describe('Baseline Alignment', () => {
      75 |     it('should align rotating text baseline with static text baseline', async () => {
    > 76 |       const { getByTestId } = render(<Home />);
         |                                     ^
      77 |       
      78 |       const staticText = getByTestId('static-text');
      79 |       const rotatingText = getByTestId('rotating-text');

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-alignment.test.tsx:76:37)

  console.error
    Received `true` for a non-boolean attribute `fill`.
    
    If you want to write it to the DOM, pass a string instead: fill="true" or fill={value.toString()}.

      62 |   describe('Word Sequence Cycling', () => {
      63 |     it('should cycle through all words in correct order', async () => {
    > 64 |       const { getByTestId } = render(<Home />);
         |                                     ^
      65 |       const rotatingText = getByTestId('rotating-text');
      66 |       
      67 |       const observer = new WordSequenceObserver(rotatingText);

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:64:37)

  console.error
    Received `true` for a non-boolean attribute `priority`.
    
    If you want to write it to the DOM, pass a string instead: priority="true" or priority={value.toString()}.

      62 |   describe('Word Sequence Cycling', () => {
      63 |     it('should cycle through all words in correct order', async () => {
    > 64 |       const { getByTestId } = render(<Home />);
         |                                     ^
      65 |       const rotatingText = getByTestId('rotating-text');
      66 |       
      67 |       const observer = new WordSequenceObserver(rotatingText);

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:64:37)

  console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {
    > 29 |         setCurrentWordIndex((prevIndex) => (prevIndex + 1) % rotatingWords.length)
         |         ^
      30 |         setAnimationState('entering')
      31 |         
      32 |         // Phase 3: After entrance completes, return to visible state

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (__tests__/animations/rotating-text.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      28 |       setTimeout(() => {
      29 |         setCurrentWordIndex((prevIndex) => (prevIndex + 1) % rotatingWords.length)
    > 30 |         setAnimationState('entering')
         |         ^
      31 |         
      32 |         // Phase 3: After entrance completes, return to visible state
      33 |         setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:30:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      32 |         // Phase 3: After entrance completes, return to visible state
      33 |         setTimeout(() => {
    > 34 |           setAnimationState('visible')
         |           ^
      35 |         }, 400) // Entrance animation duration
      36 |       }, 400) // Exit animation duration
      37 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:34:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

FAIL __tests__/animations/logo-stagger.test.tsx
  Logo Staggered Animations
    Staggered Animation Timing
      ‚úì should render all logo elements initially without animation class (27 ms)
      ‚úï should trigger animations in staggered sequence (14 ms)
      ‚úì should start animations after initial delay (32 ms)
      ‚úì should animate all logos within reasonable timeframe (6 ms)
    Animation CSS Properties
      ‚úì should apply fade-in animation to animated logos (8 ms)
      ‚úì should have proper CSS animation properties on animated elements (29 ms)
    Logo Content and Accessibility
      ‚úì should render correct logo images with proper alt text (4 ms)
      ‚úì should maintain logo visibility during and after animation (14 ms)
      ‚úì should have proper data attributes for testing (3 ms)
    Staggered Animation Utilities
      ‚úï should work with StaggeredAnimationTester utility (7 ms)
    Performance and Efficiency
      ‚úì should not cause excessive re-renders (9 ms)
      ‚úì should clean up timers on unmount (2 ms)
    Edge Cases
      ‚úì should handle empty logo array gracefully (2 ms)
      ‚úì should handle component unmount during animation (2 ms)
      ‚úì should work correctly with different numbers of logos (3 ms)

  ‚óè Logo Staggered Animations ‚Ä∫ Staggered Animation Timing ‚Ä∫ should trigger animations in staggered sequence

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 140
    Received:    100

      107 |       for (let i = 1; i < animationTimes.length; i++) {
      108 |         const delay = animationTimes[i] - animationTimes[i - 1]
    > 109 |         expect(delay).toBeGreaterThanOrEqual(140) // Allow 10ms tolerance
          |                       ^
      110 |         expect(delay).toBeLessThanOrEqual(160)
      111 |       }
      112 |     }, 5000)

      at Object.toBeGreaterThanOrEqual (__tests__/animations/logo-stagger.test.tsx:109:23)

  ‚óè Logo Staggered Animations ‚Ä∫ Staggered Animation Utilities ‚Ä∫ should work with StaggeredAnimationTester utility

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 130
    Received:    100

      392 |     for (let i = 1; i < animationTimes.length; i++) {
      393 |       const delay = animationTimes[i] - animationTimes[i - 1]
    > 394 |       expect(delay).toBeGreaterThanOrEqual(this.expectedDelay - 20) // Allow tolerance
          |                     ^
      395 |       expect(delay).toBeLessThanOrEqual(this.expectedDelay + 20)
      396 |     }
      397 |   }

      at StaggeredAnimationTester.toBeGreaterThanOrEqual [as verifyStaggeredAnimation] (test-utils/keyframe-testing.ts:394:21)
      at Object.<anonymous> (__tests__/animations/logo-stagger.test.tsx:257:7)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

FAIL __tests__/animations/rotating-text.test.tsx
  Rotating Text Animation States
    Animation State Machine
      ‚úì should start in visible state (43 ms)
      ‚úï should transition through all animation states correctly (23 ms)
      ‚úï should change words during the entering phase (13 ms)
      ‚úï should cycle through all words in correct order (11 ms)
    CSS Animation Properties
      ‚úì should have correct keyframe animations for exiting state (11 ms)
      ‚úï should have correct keyframe animations for entering state (12 ms)
    Animation Timing
      ‚úï should complete each phase within expected timeframes (13 ms)
      ‚úï should maintain consistent cycle timing (9 ms)
    Container Properties
      ‚úì should have proper container styling to prevent cutoff (5 ms)
      ‚úì should maintain text alignment with surrounding content (3 ms)
    React Key Prop Behavior
      ‚úï should re-mount component when word changes due to key prop (10 ms)
    Error Resilience
      ‚úì should handle rapid state changes gracefully (3 ms)
      ‚úï should not get stuck in any particular state (32 ms)

  ‚óè Rotating Text Animation States ‚Ä∫ Animation State Machine ‚Ä∫ should transition through all animation states correctly

    expect(element).toHaveClass("rotating-text-entering")

    Expected the element to have class:
      rotating-text-entering
    Received:
      rotating-text rotating-text-exiting

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

       97 |       await waitFor(
       98 |         () => {
    >  99 |           expect(rotatingText).toHaveClass('rotating-text-entering')
          |                                ^
      100 |         },
      101 |         { timeout: 1000 }
      102 |       )

      at toHaveClass (__tests__/animations/rotating-text.test.tsx:99:32)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Rotating Text Animation States ‚Ä∫ Animation State Machine ‚Ä∫ should change words during the entering phase

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      120 |       await waitFor(
      121 |         () => {
    > 122 |           expect(rotatingText.textContent).not.toBe(initialWord)
          |                                                ^
      123 |         },
      124 |         { timeout: 5000 }
      125 |       )

      at toBe (__tests__/animations/rotating-text.test.tsx:122:48)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Rotating Text Animation States ‚Ä∫ Animation State Machine ‚Ä∫ should cycle through all words in correct order

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  ["Workplaces"]

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      145 |               observedWords.push(currentWord)
      146 |             }
    > 147 |             expect(observedWords).toHaveLength(i + 1)
          |                                   ^
      148 |           },
      149 |           { timeout: 4000 }
      150 |         )

      at toHaveLength (__tests__/animations/rotating-text.test.tsx:147:35)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Rotating Text Animation States ‚Ä∫ CSS Animation Properties ‚Ä∫ should have correct keyframe animations for entering state

    expect(element).toHaveClass("rotating-text-entering")

    Expected the element to have class:
      rotating-text-entering
    Received:
      rotating-text rotating-text-exiting

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      182 |       await waitFor(
      183 |         () => {
    > 184 |           expect(rotatingText).toHaveClass('rotating-text-entering')
          |                                ^
      185 |         },
      186 |         { timeout: 5000 }
      187 |       )

      at toHaveClass (__tests__/animations/rotating-text.test.tsx:184:32)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Rotating Text Animation States ‚Ä∫ Animation Timing ‚Ä∫ should complete each phase within expected timeframes

    expect(element).toHaveClass("rotating-text-visible")

    Expected the element to have class:
      rotating-text-visible
    Received:
      rotating-text rotating-text-exiting

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      211 |       await waitFor(
      212 |         () => {
    > 213 |           expect(rotatingText).toHaveClass('rotating-text-visible')
          |                                ^
      214 |         },
      215 |         { timeout: 2000 }
      216 |       )

      at toHaveClass (__tests__/animations/rotating-text.test.tsx:213:32)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Rotating Text Animation States ‚Ä∫ Animation Timing ‚Ä∫ should maintain consistent cycle timing

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      234 |         await waitFor(
      235 |           () => {
    > 236 |             expect(rotatingText.textContent).not.toBe(initialWord)
          |                                                  ^
      237 |           },
      238 |           { timeout: 4000 }
      239 |         )

      at toBe (__tests__/animations/rotating-text.test.tsx:236:50)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Rotating Text Animation States ‚Ä∫ React Key Prop Behavior ‚Ä∫ should re-mount component when word changes due to key prop

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      294 |         () => {
      295 |           const currentWord = rotatingText.textContent
    > 296 |           expect(currentWord).not.toBe(initialWord)
          |                                   ^
      297 |         },
      298 |         { timeout: 5000 }
      299 |       )

      at toBe (__tests__/animations/rotating-text.test.tsx:296:35)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Rotating Text Animation States ‚Ä∫ Error Resilience ‚Ä∫ should not get stuck in any particular state

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 3
    Received:    2

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mBusinesses[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      351 |       await waitFor(
      352 |         () => {
    > 353 |           expect(stateHistory.length).toBeGreaterThanOrEqual(3)
          |                                       ^
      354 |           expect(stateHistory).toContain('rotating-text-visible')
      355 |           expect(stateHistory).toContain('rotating-text-exiting')
      356 |           expect(stateHistory).toContain('rotating-text-entering')

      at toBeGreaterThanOrEqual (__tests__/animations/rotating-text.test.tsx:353:39)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      76 |       // If animation gets stuck, reset to visible state
      77 |       if (animationState !== 'visible') {
    > 78 |         setAnimationState('visible');
         |         ^
      79 |       }
      80 |     }, 2000); // Reset if stuck for more than 2 seconds
      81 |     

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:78:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-timing.test.tsx:57:10)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          55 |
          56 |   afterEach(() => {
        > 57 |     jest.runOnlyPendingTimers();
             |          ^
          58 |     jest.useRealTimers();
          59 |     jest.restoreAllMocks();
          60 |   });
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-timing.test.tsx:57:10)

      55 |
      56 |   afterEach(() => {
    > 57 |     jest.runOnlyPendingTimers();
         |          ^
      58 |     jest.useRealTimers();
      59 |     jest.restoreAllMocks();
      60 |   });

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-timing.test.tsx:57:10)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    The current testing environment is not configured to support act(...)

      76 |       // If animation gets stuck, reset to visible state
      77 |       if (animationState !== 'visible') {
    > 78 |         setAnimationState('visible');
         |         ^
      79 |       }
      80 |     }, 2000); // Reset if stuck for more than 2 seconds
      81 |     

      at isConcurrentActEnvironment (node_modules/react-dom/cjs/react-dom-client.development.js:14318:17)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16020:7)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:78:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-timing.test.tsx:57:10)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

FAIL __tests__/animations/rotating-text-timing.test.tsx (6.094 s)
  Homepage Rotating Text Timing
    Rotation Timing Accuracy
      ‚úï should rotate words at exactly 3-second intervals (104 ms)
      ‚úï should maintain consistent timing across multiple cycles (76 ms)
      ‚úì should handle timing precision under stress conditions (68 ms)
    Animation State Timing
      ‚úì should spend correct amount of time in each animation state (26 ms)
      ‚úì should transition between states without timing gaps (28 ms)
    Performance Impact
      ‚úì should maintain smooth 60fps during animations (5028 ms)
      ‚úï should not interfere with other page animations (46 ms)
    Component Lifecycle Timing
      ‚úì should handle rapid component mounting/unmounting (35 ms)
      ‚úï should start timing correctly after component mount (17 ms)
    Error Recovery Timing
      ‚úï should recover timing after errors (82 ms)

  ‚óè Homepage Rotating Text Timing ‚Ä∫ Rotation Timing Accuracy ‚Ä∫ should rotate words at exactly 3-second intervals

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head>[39m
        [36m<title[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
        [36m>[39m
          [0mSMARTER VENDING[0m
        [36m</title>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"Traditional & healthy vending, coffee, and mini-market services for workplaces. Request a demo today!"[39m
          [33mname[39m=[32m"description"[39m
        [36m/>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"width=device-width, initial-scale=1"[39m
          [33mname[39m=[32m"viewport"[39m
        [36m/>[39m
        [36m<link[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mhref[39m=[32m"/favicon.ico"[39m
          [33mrel[39m=[32m"icon"[39m
        [36m/>[39m
      [36m</head>[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"layout"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split-container"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-inner"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-badge"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                      [36m>[39m
                        [0mCalifornia's #1 Choice[0m
                      [36m</span>[39m
                    [36m</div>[39m
                    [36m<h1[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-title"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                        [33mdata-testid[39m=[32m"static-text"[39m
                      [36m>[39m
                        [0mPremium Amenity for Modern[0m
                      [36m</span>[39m
                      [0m [0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text-container"[39m
                        [33mdata-testid[39m=[32m"rotating-text-container"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text rotating-text-entering"[39m
                          [33mdata-testid[39m=[32m"rotating-text"[39m
                        [36m>[39m
                          [0mBusinesses[0m
                        [36m</span>[39m
                      [36m</span>[39m
                    [36m</h1>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-description"[39m
                    [36m>[39m
                      [0mTransform your workplace with comprehensive vending, coffee, and mini-market services. We serve businesses of 150-25,000 employees across California with premium solutions that keep teams energized and productive.[0m
                    [36m</p>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-stats"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m200+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mLocations Served[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m50,000+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mHappy Employees[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m15+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mYears Experience[0m
                        [36m</span>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-actions"[39m
                    [36m>[39m
                      [36m<button[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f btn btn-primary btn-lg btn-shimmer"[39m
                      [36m>[39m
                        [0mRequest a Demo[0m
                      [36m</button>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-contact"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-text"[39m
                        [36m>[39m
                          [0mOr call us today[0m
                        [36m</span>[39m
                        [36m<a[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
                          [33mhref[39m=[32m"tel:909.258.9848"[39m
                        [36m>[39m
                          [0m909.258.9848[0m
                        [36m</a>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-container"[39m
                  [36m>[39m
                    [36m<img[39m
                      [33malt[39m=[32m"Di...

      77 |         
      78 |         await waitFor(() => {
    > 79 |           expect(rotatingText.textContent).not.toBe(initialWord);
         |                                                ^
      80 |         });
      81 |         
      82 |         // Test multiple intervals

      at toBe (__tests__/animations/rotating-text-timing.test.tsx:79:48)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Homepage Rotating Text Timing ‚Ä∫ Rotation Timing Accuracy ‚Ä∫ should maintain consistent timing across multiple cycles

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      141 |         const timingValidation = observer.validateTiming(ROTATION_INTERVAL, TIMING_TOLERANCE);
      142 |         
    > 143 |         expect(timingValidation.timingCorrect).toBe(true);
          |                                                ^
      144 |         expect(timingValidation.averageInterval).toBeCloseTo(ROTATION_INTERVAL, -2); // Within 100ms
      145 |         
      146 |         if (!timingValidation.timingCorrect) {

      at Object.toBe (__tests__/animations/rotating-text-timing.test.tsx:143:48)

  ‚óè Homepage Rotating Text Timing ‚Ä∫ Performance Impact ‚Ä∫ should not interfere with other page animations

    expect(received).toBeGreaterThan(expected)

    Expected: > 1
    Received:   1

      357 |         // Verify rotation still works correctly
      358 |         const sequence = observer.getWordSequence();
    > 359 |         expect(sequence.length).toBeGreaterThan(1);
          |                                 ^
      360 |         
      361 |         sequence.forEach(word => {
      362 |           expect(expectedWords).toContain(word);

      at Object.toBeGreaterThan (__tests__/animations/rotating-text-timing.test.tsx:359:33)

  ‚óè Homepage Rotating Text Timing ‚Ä∫ Component Lifecycle Timing ‚Ä∫ should start timing correctly after component mount

    expect(received).toBeGreaterThan(expected)

    Expected: > 1
    Received:   1

      437 |         
      438 |         const observations = observer.getObservations();
    > 439 |         expect(observations.length).toBeGreaterThan(1);
          |                                     ^
      440 |         
      441 |         // Verify timing started properly
      442 |         const firstTransition = observations[1];

      at Object.toBeGreaterThan (__tests__/animations/rotating-text-timing.test.tsx:439:37)

  ‚óè Homepage Rotating Text Timing ‚Ä∫ Error Recovery Timing ‚Ä∫ should recover timing after errors

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head>[39m
        [36m<title[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
        [36m>[39m
          [0mSMARTER VENDING[0m
        [36m</title>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"Traditional & healthy vending, coffee, and mini-market services for workplaces. Request a demo today!"[39m
          [33mname[39m=[32m"description"[39m
        [36m/>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"width=device-width, initial-scale=1"[39m
          [33mname[39m=[32m"viewport"[39m
        [36m/>[39m
        [36m<link[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mhref[39m=[32m"/favicon.ico"[39m
          [33mrel[39m=[32m"icon"[39m
        [36m/>[39m
      [36m</head>[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"layout"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split-container"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-inner"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-badge"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                      [36m>[39m
                        [0mCalifornia's #1 Choice[0m
                      [36m</span>[39m
                    [36m</div>[39m
                    [36m<h1[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-title"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                        [33mdata-testid[39m=[32m"static-text"[39m
                      [36m>[39m
                        [0mPremium Amenity for Modern[0m
                      [36m</span>[39m
                      [0m [0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text-container"[39m
                        [33mdata-testid[39m=[32m"rotating-text-container"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text rotating-text-entering"[39m
                          [33mdata-testid[39m=[32m"rotating-text"[39m
                        [36m>[39m
                          [0mApartments[0m
                        [36m</span>[39m
                      [36m</span>[39m
                    [36m</h1>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-description"[39m
                    [36m>[39m
                      [0mTransform your workplace with comprehensive vending, coffee, and mini-market services. We serve businesses of 150-25,000 employees across California with premium solutions that keep teams energized and productive.[0m
                    [36m</p>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-stats"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m200+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mLocations Served[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m50,000+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mHappy Employees[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m15+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mYears Experience[0m
                        [36m</span>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-actions"[39m
                    [36m>[39m
                      [36m<button[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f btn btn-primary btn-lg btn-shimmer"[39m
                      [36m>[39m
                        [0mRequest a Demo[0m
                      [36m</button>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-contact"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-text"[39m
                        [36m>[39m
                          [0mOr call us today[0m
                        [36m</span>[39m
                        [36m<a[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
                          [33mhref[39m=[32m"tel:909.258.9848"[39m
                        [36m>[39m
                          [0m909.258.9848[0m
                        [36m</a>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-container"[39m
                  [36m>[39m
                    [36m<img[39m
                      [33malt[39m=[32m"Di...

      487 |           expect(expectedWords).toContain(wordAfter);
      488 |           // Should have progressed
    > 489 |           expect(wordAfter).not.toBe(wordBefore);
          |                                 ^
      490 |         });
      491 |         
      492 |         // Verify timing is back to normal

      at toBe (__tests__/animations/rotating-text-timing.test.tsx:489:33)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          55 |
          56 |   afterEach(() => {
        > 57 |     jest.runOnlyPendingTimers();
             |          ^
          58 |     jest.useRealTimers();
          59 |     jest.restoreAllMocks();
          60 |   });
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-cycling.test.tsx:57:10)

      55 |
      56 |   afterEach(() => {
    > 57 |     jest.runOnlyPendingTimers();
         |          ^
      58 |     jest.useRealTimers();
      59 |     jest.restoreAllMocks();
      60 |   });

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-cycling.test.tsx:57:10)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          152 |         for (let i = 0; i < 10; i++) {
          153 |           act(() => {
        > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
              |                  ^
          155 |           });
          156 |           
          157 |           await new Promise(resolve => setTimeout(resolve, 50));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

      152 |         for (let i = 0; i < 10; i++) {
      153 |           act(() => {
    > 154 |             jest.advanceTimersByTime(300); // Rapid time jumps
          |                  ^
      155 |           });
      156 |           
      157 |           await new Promise(resolve => setTimeout(resolve, 50));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:154:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:153:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          55 |
          56 |   afterEach(() => {
        > 57 |     jest.runOnlyPendingTimers();
             |          ^
          58 |     jest.useRealTimers();
          59 |     jest.restoreAllMocks();
          60 |   });
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-cycling.test.tsx:57:10)

      55 |
      56 |   afterEach(() => {
    > 57 |     jest.runOnlyPendingTimers();
         |          ^
      58 |     jest.useRealTimers();
      59 |     jest.restoreAllMocks();
      60 |   });

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-cycling.test.tsx:57:10)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    The current testing environment is not configured to support act(...)

      76 |       // If animation gets stuck, reset to visible state
      77 |       if (animationState !== 'visible') {
    > 78 |         setAnimationState('visible');
         |         ^
      79 |       }
      80 |     }, 2000); // Reset if stuck for more than 2 seconds
      81 |     

      at isConcurrentActEnvironment (node_modules/react-dom/cjs/react-dom-client.development.js:14318:17)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16020:7)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:78:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-cycling.test.tsx:57:10)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          405 |         for (let i = 0; i < 20; i++) {
          406 |           act(() => {
        > 407 |             jest.advanceTimersByTime(100);
              |                  ^
          408 |           });
          409 |           
          410 |           await new Promise(resolve => setTimeout(resolve, 10));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:407:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:406:14)

      405 |         for (let i = 0; i < 20; i++) {
      406 |           act(() => {
    > 407 |             jest.advanceTimersByTime(100);
          |                  ^
      408 |           });
      409 |           
      410 |           await new Promise(resolve => setTimeout(resolve, 10));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:407:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:406:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.error
    You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);

      405 |         for (let i = 0; i < 20; i++) {
      406 |           act(() => {
    > 407 |             jest.advanceTimersByTime(100);
          |                  ^
      408 |           });
      409 |           
      410 |           await new Promise(resolve => setTimeout(resolve, 10));

      at node_modules/react/cjs/react.development.js:810:21
      at runJobs (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:573:22)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1394:13)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:576:19)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:407:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:406:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          405 |         for (let i = 0; i < 20; i++) {
          406 |           act(() => {
        > 407 |             jest.advanceTimersByTime(100);
              |                  ^
          408 |           });
          409 |           
          410 |           await new Promise(resolve => setTimeout(resolve, 10));
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
          at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:407:18)
          at node_modules/@testing-library/react/dist/act-compat.js:48:24
          at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
          at node_modules/@testing-library/react/dist/act-compat.js:47:25
          at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:406:14)

      405 |         for (let i = 0; i < 20; i++) {
      406 |           act(() => {
    > 407 |             jest.advanceTimersByTime(100);
          |                  ^
      408 |           });
      409 |           
      410 |           await new Promise(resolve => setTimeout(resolve, 10));

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.advanceTimersByTime (node_modules/@jest/fake-timers/build/index.js:575:14)
      at advanceTimersByTime (__tests__/animations/rotating-text-cycling.test.tsx:407:18)
      at node_modules/@testing-library/react/dist/act-compat.js:48:24
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:789:22)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:406:14)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

FAIL __tests__/animations/rotating-text-cycling.test.tsx (66.286 s)
  Homepage Rotating Text Cycling
    Word Sequence Cycling
      ‚úï should cycle through all words in correct order (126 ms)
      ‚úï should properly loop back to first word after last word (224 ms)
      ‚úï should handle edge cases with word array changes (30028 ms)
      ‚úï should maintain sequence integrity during timing glitches (51 ms)
    Complete Cycle Validation
      ‚úï should complete full cycles without missing words (19 ms)
      ‚úì should never display empty text during transitions (33 ms)
      ‚úï should complete full word cycling sequence correctly (58 ms)
    Animation State Management
      ‚úì should transition through animation states correctly (5019 ms)
      ‚úï should handle component re-renders without breaking cycling (43 ms)
    Edge Case Handling
      ‚úï should handle rapid state changes gracefully (30039 ms)
      ‚úï should recover from stuck animation states (54 ms)

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Word Sequence Cycling ‚Ä∫ should cycle through all words in correct order

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      87 |         
      88 |         const validation = observer.validateExpectedSequence(expectedWords, 2);
    > 89 |         expect(validation.valid).toBe(true);
         |                                  ^
      90 |         
      91 |         if (!validation.valid) {
      92 |           console.log('Sequence validation failed:', {

      at Object.toBe (__tests__/animations/rotating-text-cycling.test.tsx:89:34)

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Word Sequence Cycling ‚Ä∫ should properly loop back to first word after last word

    expect(received).toBe(expected) // Object.is equality

    Expected: "Businesses"
    Received: "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head>[39m
        [36m<title[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
        [36m>[39m
          [0mSMARTER VENDING[0m
        [36m</title>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"Traditional & healthy vending, coffee, and mini-market services for workplaces. Request a demo today!"[39m
          [33mname[39m=[32m"description"[39m
        [36m/>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"width=device-width, initial-scale=1"[39m
          [33mname[39m=[32m"viewport"[39m
        [36m/>[39m
        [36m<link[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mhref[39m=[32m"/favicon.ico"[39m
          [33mrel[39m=[32m"icon"[39m
        [36m/>[39m
      [36m</head>[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"layout"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split-container"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-inner"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-badge"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                      [36m>[39m
                        [0mCalifornia's #1 Choice[0m
                      [36m</span>[39m
                    [36m</div>[39m
                    [36m<h1[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-title"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                        [33mdata-testid[39m=[32m"static-text"[39m
                      [36m>[39m
                        [0mPremium Amenity for Modern[0m
                      [36m</span>[39m
                      [0m [0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text-container"[39m
                        [33mdata-testid[39m=[32m"rotating-text-container"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text rotating-text-entering"[39m
                          [33mdata-testid[39m=[32m"rotating-text"[39m
                        [36m>[39m
                          [0mGyms[0m
                        [36m</span>[39m
                      [36m</span>[39m
                    [36m</h1>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-description"[39m
                    [36m>[39m
                      [0mTransform your workplace with comprehensive vending, coffee, and mini-market services. We serve businesses of 150-25,000 employees across California with premium solutions that keep teams energized and productive.[0m
                    [36m</p>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-stats"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m200+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mLocations Served[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m50,000+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mHappy Employees[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m15+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mYears Experience[0m
                        [36m</span>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-actions"[39m
                    [36m>[39m
                      [36m<button[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f btn btn-primary btn-lg btn-shimmer"[39m
                      [36m>[39m
                        [0mRequest a Demo[0m
                      [36m</button>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-contact"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-text"[39m
                        [36m>[39m
                          [0mOr call us today[0m
                        [36m</span>[39m
                        [36m<a[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
                          [33mhref[39m=[32m"tel:909.258.9848"[39m
                        [36m>[39m
                          [0m909.258.9848[0m
                        [36m</a>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-container"[39m
                  [36m>[39m
                    [36m<img[39m
                      [33malt[39m=[32m"Diverse ...

      111 |         // Wait for the last word in sequence
      112 |         await waitFor(() => {
    > 113 |           expect(rotatingText.textContent).toBe('Businesses');
          |                                            ^
      114 |         }, { timeout: 15000 });
      115 |         
      116 |         // Advance to next word (should cycle back to first)

      at toBe (__tests__/animations/rotating-text-cycling.test.tsx:113:44)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Word Sequence Cycling ‚Ä∫ should handle edge cases with word array changes

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      138 |     });
      139 |
    > 140 |     it('should handle edge cases with word array changes', async () => {
          |     ^
      141 |       // This test would require modifying the component to accept dynamic word arrays
      142 |       // For now, we'll test the robustness of the current implementation
      143 |       

      at it (__tests__/animations/rotating-text-cycling.test.tsx:140:5)
      at describe (__tests__/animations/rotating-text-cycling.test.tsx:62:3)
      at Object.describe (__tests__/animations/rotating-text-cycling.test.tsx:48:1)

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Word Sequence Cycling ‚Ä∫ should maintain sequence integrity during timing glitches

    expect(received).toBeGreaterThan(expected)

    Expected: > 2
    Received:   1

      206 |         
      207 |         // Should have progressed through sequence despite irregular timing
    > 208 |         expect(sequence.length).toBeGreaterThan(2);
          |                                 ^
      209 |       } finally {
      210 |         observer.stop();
      211 |       }

      at Object.toBeGreaterThan (__tests__/animations/rotating-text-cycling.test.tsx:208:33)

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Complete Cycle Validation ‚Ä∫ should complete full cycles without missing words

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      222 |       const cycleResult = await waitForCompleteCycle(rotatingText, expectedWords, 20000);
      223 |       
    > 224 |       expect(cycleResult.success).toBe(true);
          |                                   ^
      225 |       expect(cycleResult.observedWords).toEqual(expect.arrayContaining(expectedWords));
      226 |       expect(cycleResult.observedWords.length).toBe(expectedWords.length);
      227 |       

      at Object.toBe (__tests__/animations/rotating-text-cycling.test.tsx:224:35)

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Complete Cycle Validation ‚Ä∫ should complete full word cycling sequence correctly

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 5
    Received:    1

      298 |         
      299 |         // Verify proper cycling pattern
    > 300 |         expect(observedSequence.length).toBeGreaterThanOrEqual(expectedWords.length + 1);
          |                                         ^
      301 |         
      302 |         // Find the cycle transition point
      303 |         let cycleTransitionFound = false;

      at Object.toBeGreaterThanOrEqual (__tests__/animations/rotating-text-cycling.test.tsx:300:41)

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Animation State Management ‚Ä∫ should handle component re-renders without breaking cycling

    expect(element).toBeInTheDocument()

    element could not be found in the document

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head>[39m
        [36m<title[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
        [36m>[39m
          [0mSMARTER VENDING[0m
        [36m</title>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"Traditional & healthy vending, coffee, and mini-market services for workplaces. Request a demo today!"[39m
          [33mname[39m=[32m"description"[39m
        [36m/>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"width=device-width, initial-scale=1"[39m
          [33mname[39m=[32m"viewport"[39m
        [36m/>[39m
        [36m<link[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mhref[39m=[32m"/favicon.ico"[39m
          [33mrel[39m=[32m"icon"[39m
        [36m/>[39m
      [36m</head>[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"layout"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split-container"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-inner"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-badge"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                      [36m>[39m
                        [0mCalifornia's #1 Choice[0m
                      [36m</span>[39m
                    [36m</div>[39m
                    [36m<h1[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-title"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                        [33mdata-testid[39m=[32m"static-text"[39m
                      [36m>[39m
                        [0mPremium Amenity for Modern[0m
                      [36m</span>[39m
                      [0m [0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text-container"[39m
                        [33mdata-testid[39m=[32m"rotating-text-container"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text rotating-text-entering"[39m
                          [33mdata-testid[39m=[32m"rotating-text"[39m
                        [36m>[39m
                          [0mApartments[0m
                        [36m</span>[39m
                      [36m</span>[39m
                    [36m</h1>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-description"[39m
                    [36m>[39m
                      [0mTransform your workplace with comprehensive vending, coffee, and mini-market services. We serve businesses of 150-25,000 employees across California with premium solutions that keep teams energized and productive.[0m
                    [36m</p>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-stats"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m200+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mLocations Served[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m50,000+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mHappy Employees[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m15+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mYears Experience[0m
                        [36m</span>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-actions"[39m
                    [36m>[39m
                      [36m<button[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f btn btn-primary btn-lg btn-shimmer"[39m
                      [36m>[39m
                        [0mRequest a Demo[0m
                      [36m</button>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-contact"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-text"[39m
                        [36m>[39m
                          [0mOr call us today[0m
                        [36m</span>[39m
                        [36m<a[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
                          [33mhref[39m=[32m"tel:909.258.9848"[39m
                        [36m>[39m
                          [0m909.258.9848[0m
                        [36m</a>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-container"[39m
                  [36m>[39m
                    [36m<img[39m
                      [33malt[39m=[32m"Di...

      369 |         
      370 |         await waitFor(() => {
    > 371 |           expect(rotatingText).toBeInTheDocument();
          |                                ^
      372 |         });
      373 |         
      374 |         // Continue cycling after re-render

      at toBeInTheDocument (__tests__/animations/rotating-text-cycling.test.tsx:371:32)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Edge Case Handling ‚Ä∫ should handle rapid state changes gracefully

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      394 |
      395 |   describe('Edge Case Handling', () => {
    > 396 |     it('should handle rapid state changes gracefully', async () => {
          |     ^
      397 |       const { getByTestId } = render(<Home />);
      398 |       const rotatingText = getByTestId('rotating-text');
      399 |       

      at it (__tests__/animations/rotating-text-cycling.test.tsx:396:5)
      at describe (__tests__/animations/rotating-text-cycling.test.tsx:395:3)
      at Object.describe (__tests__/animations/rotating-text-cycling.test.tsx:48:1)

  ‚óè Homepage Rotating Text Cycling ‚Ä∫ Edge Case Handling ‚Ä∫ should recover from stuck animation states

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head>[39m
        [36m<title[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
        [36m>[39m
          [0mSMARTER VENDING[0m
        [36m</title>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"Traditional & healthy vending, coffee, and mini-market services for workplaces. Request a demo today!"[39m
          [33mname[39m=[32m"description"[39m
        [36m/>[39m
        [36m<meta[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mcontent[39m=[32m"width=device-width, initial-scale=1"[39m
          [33mname[39m=[32m"viewport"[39m
        [36m/>[39m
        [36m<link[39m
          [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
          [33mhref[39m=[32m"/favicon.ico"[39m
          [33mrel[39m=[32m"icon"[39m
        [36m/>[39m
      [36m</head>[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div[39m
            [33mdata-testid[39m=[32m"layout"[39m
          [36m>[39m
            [36m<section[39m
              [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-split-container"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-content-inner"[39m
                  [36m>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-badge"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                      [36m>[39m
                        [0mCalifornia's #1 Choice[0m
                      [36m</span>[39m
                    [36m</div>[39m
                    [36m<h1[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-title"[39m
                    [36m>[39m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f"[39m
                        [33mdata-testid[39m=[32m"static-text"[39m
                      [36m>[39m
                        [0mPremium Amenity for Modern[0m
                      [36m</span>[39m
                      [0m [0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text-container"[39m
                        [33mdata-testid[39m=[32m"rotating-text-container"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f rotating-text rotating-text-entering"[39m
                          [33mdata-testid[39m=[32m"rotating-text"[39m
                        [36m>[39m
                          [0mGyms[0m
                        [36m</span>[39m
                      [36m</span>[39m
                    [36m</h1>[39m
                    [36m<p[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-description"[39m
                    [36m>[39m
                      [0mTransform your workplace with comprehensive vending, coffee, and mini-market services. We serve businesses of 150-25,000 employees across California with premium solutions that keep teams energized and productive.[0m
                    [36m</p>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-stats"[39m
                    [36m>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m200+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mLocations Served[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m50,000+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mHappy Employees[0m
                        [36m</span>[39m
                      [36m</div>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-item"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-number"[39m
                        [36m>[39m
                          [0m15+[0m
                        [36m</span>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f stat-label"[39m
                        [36m>[39m
                          [0mYears Experience[0m
                        [36m</span>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                    [36m<div[39m
                      [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-actions"[39m
                    [36m>[39m
                      [36m<button[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f btn btn-primary btn-lg btn-shimmer"[39m
                      [36m>[39m
                        [0mRequest a Demo[0m
                      [36m</button>[39m
                      [36m<div[39m
                        [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-contact"[39m
                      [36m>[39m
                        [36m<span[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-text"[39m
                        [36m>[39m
                          [0mOr call us today[0m
                        [36m</span>[39m
                        [36m<a[39m
                          [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
                          [33mhref[39m=[32m"tel:909.258.9848"[39m
                        [36m>[39m
                          [0m909.258.9848[0m
                        [36m</a>[39m
                      [36m</div>[39m
                    [36m</div>[39m
                  [36m</div>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-side"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"jsx-aaab183f6ae3640f hero-image-container"[39m
                  [36m>[39m
                    [36m<img[39m
                      [33malt[39m=[32m"Diverse ...

      451 |           expect(expectedWords).toContain(word2);
      452 |           // Should have progressed
    > 453 |           expect(word2).not.toBe(word1);
          |                             ^
      454 |         });
      455 |         
      456 |         // Continue normal cycling

      at toBe (__tests__/animations/rotating-text-cycling.test.tsx:453:29)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

FAIL __tests__/animations/rotating-text-alignment.test.tsx (210.967 s)
  Homepage Rotating Text Alignment
    Baseline Alignment
      ‚úï should align rotating text baseline with static text baseline (30039 ms)
      ‚úï should maintain consistent font styling between static and rotating text (30087 ms)
      ‚úï should maintain alignment across all rotating words (30057 ms)
      ‚úï should preserve alignment during animation transitions (30018 ms)
    Responsive Alignment
      ‚úï should maintain alignment across different viewport sizes (30036 ms)
    CSS Positioning Analysis
      ‚úï should use proper CSS positioning for baseline alignment (30027 ms)
    Font Loading and Rendering
      ‚úï should handle font loading gracefully without affecting alignment (30038 ms)

  ‚óè Homepage Rotating Text Alignment ‚Ä∫ Baseline Alignment ‚Ä∫ should align rotating text baseline with static text baseline

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      73 |
      74 |   describe('Baseline Alignment', () => {
    > 75 |     it('should align rotating text baseline with static text baseline', async () => {
         |     ^
      76 |       const { getByTestId } = render(<Home />);
      77 |       
      78 |       const staticText = getByTestId('static-text');

      at it (__tests__/animations/rotating-text-alignment.test.tsx:75:5)
      at describe (__tests__/animations/rotating-text-alignment.test.tsx:74:3)
      at Object.describe (__tests__/animations/rotating-text-alignment.test.tsx:51:1)

  ‚óè Homepage Rotating Text Alignment ‚Ä∫ Baseline Alignment ‚Ä∫ should maintain consistent font styling between static and rotating text

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      104 |     });
      105 |
    > 106 |     it('should maintain consistent font styling between static and rotating text', async () => {
          |     ^
      107 |       const { getByTestId } = render(<Home />);
      108 |       
      109 |       const staticText = getByTestId('static-text');

      at it (__tests__/animations/rotating-text-alignment.test.tsx:106:5)
      at describe (__tests__/animations/rotating-text-alignment.test.tsx:74:3)
      at Object.describe (__tests__/animations/rotating-text-alignment.test.tsx:51:1)

  ‚óè Homepage Rotating Text Alignment ‚Ä∫ Baseline Alignment ‚Ä∫ should maintain alignment across all rotating words

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      127 |     });
      128 |
    > 129 |     it('should maintain alignment across all rotating words', async () => {
          |     ^
      130 |       const { getByTestId } = render(<Home />);
      131 |       
      132 |       const staticText = getByTestId('static-text');

      at it (__tests__/animations/rotating-text-alignment.test.tsx:129:5)
      at describe (__tests__/animations/rotating-text-alignment.test.tsx:74:3)
      at Object.describe (__tests__/animations/rotating-text-alignment.test.tsx:51:1)

  ‚óè Homepage Rotating Text Alignment ‚Ä∫ Baseline Alignment ‚Ä∫ should preserve alignment during animation transitions

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      159 |     });
      160 |
    > 161 |     it('should preserve alignment during animation transitions', async () => {
          |     ^
      162 |       const { getByTestId } = render(<Home />);
      163 |       
      164 |       const staticText = getByTestId('static-text');

      at it (__tests__/animations/rotating-text-alignment.test.tsx:161:5)
      at describe (__tests__/animations/rotating-text-alignment.test.tsx:74:3)
      at Object.describe (__tests__/animations/rotating-text-alignment.test.tsx:51:1)

  ‚óè Homepage Rotating Text Alignment ‚Ä∫ Responsive Alignment ‚Ä∫ should maintain alignment across different viewport sizes

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      201 |
      202 |   describe('Responsive Alignment', () => {
    > 203 |     it('should maintain alignment across different viewport sizes', async () => {
          |     ^
      204 |       const { getByTestId } = render(<Home />);
      205 |       
      206 |       const staticText = getByTestId('static-text');

      at it (__tests__/animations/rotating-text-alignment.test.tsx:203:5)
      at describe (__tests__/animations/rotating-text-alignment.test.tsx:202:3)
      at Object.describe (__tests__/animations/rotating-text-alignment.test.tsx:51:1)

  ‚óè Homepage Rotating Text Alignment ‚Ä∫ CSS Positioning Analysis ‚Ä∫ should use proper CSS positioning for baseline alignment

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      228 |
      229 |   describe('CSS Positioning Analysis', () => {
    > 230 |     it('should use proper CSS positioning for baseline alignment', async () => {
          |     ^
      231 |       const { getByTestId } = render(<Home />);
      232 |       
      233 |       const container = getByTestId('rotating-text-container');

      at it (__tests__/animations/rotating-text-alignment.test.tsx:230:5)
      at describe (__tests__/animations/rotating-text-alignment.test.tsx:229:3)
      at Object.describe (__tests__/animations/rotating-text-alignment.test.tsx:51:1)

  ‚óè Homepage Rotating Text Alignment ‚Ä∫ Font Loading and Rendering ‚Ä∫ should handle font loading gracefully without affecting alignment

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      256 |
      257 |   describe('Font Loading and Rendering', () => {
    > 258 |     it('should handle font loading gracefully without affecting alignment', async () => {
          |     ^
      259 |       // Mock font loading delay
      260 |       let fontLoadResolve: () => void;
      261 |       const fontLoadPromise = new Promise<void>(resolve => {

      at it (__tests__/animations/rotating-text-alignment.test.tsx:258:5)
      at describe (__tests__/animations/rotating-text-alignment.test.tsx:257:3)
      at Object.describe (__tests__/animations/rotating-text-alignment.test.tsx:51:1)

