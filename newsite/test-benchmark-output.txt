
> newsite@0.1.0 test:benchmark
> VERBOSE=1 npm run test:parallel-runner pre-push


> newsite@0.1.0 test:parallel-runner
> node scripts/parallel-test-runner.js pre-push

⚡ Running 3 commands sequentially...
🚀 Starting Parallel Tests...
[Parallel Tests] 
> newsite@0.1.0 test:parallel
> run-p test:unit test:integration test:animations

[Parallel Tests] 
> newsite@0.1.0 test:unit
> jest --testPathPattern='__tests__/(components|hooks|utils)' --verbose

[Parallel Tests] 
> newsite@0.1.0 test:integration
> jest --testPathPattern='__tests__/pages' --verbose


> newsite@0.1.0 test:animations
> jest --testPathPattern='__tests__/animations' --verbose

[Parallel Tests]   console.error
    Received `true` for a non-boolean attribute `fill`.
    
    If you want to write it to the DOM, pass a string instead: fill="true" or fill={value.toString()}.

      62 |   describe('Word Sequence Cycling', () => {
      63 |     it('should cycle through all words in correct order', async () => {
    > 64 |       const { getByTestId } = render(<Home />);
         |                                     ^
      65 |       const rotatingText = getByTestId('rotating-text');
      66 |       
      67 |       const observer = new WordSequenceObserver(rotatingText);

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:64:37)

[Parallel Tests]   console.error
    Received `true` for a non-boolean attribute `fill`.
    
    If you want to write it to the DOM, pass a string instead: fill="true" or fill={value.toString()}.

      62 |   describe('Rotation Timing Accuracy', () => {
      63 |     it('should rotate words at exactly 3-second intervals', async () => {
    > 64 |       const { getByTestId } = render(<Home />);
         |                                     ^
      65 |       const rotatingText = getByTestId('rotating-text');
      66 |       
      67 |       const observer = new WordSequenceObserver(rotatingText);

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-timing.test.tsx:64:37)

[Parallel Tests]   console.error
    Received `true` for a non-boolean attribute `fill`.
    
    If you want to write it to the DOM, pass a string instead: fill="true" or fill={value.toString()}.

      74 |   describe('Baseline Alignment', () => {
      75 |     it('should align rotating text baseline with static text baseline', async () => {
    > 76 |       const { getByTestId } = render(<Home />);
         |                                     ^
      77 |       
      78 |       const staticText = getByTestId('static-text');
      79 |       const rotatingText = getByTestId('rotating-text');

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-alignment.test.tsx:76:37)

[Parallel Tests]   console.error
    Received `true` for a non-boolean attribute `priority`.
    
    If you want to write it to the DOM, pass a string instead: priority="true" or priority={value.toString()}.

      62 |   describe('Rotation Timing Accuracy', () => {
      63 |     it('should rotate words at exactly 3-second intervals', async () => {
    > 64 |       const { getByTestId } = render(<Home />);
         |                                     ^
      65 |       const rotatingText = getByTestId('rotating-text');
      66 |       
      67 |       const observer = new WordSequenceObserver(rotatingText);

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-timing.test.tsx:64:37)

[Parallel Tests]   console.error
    Received `true` for a non-boolean attribute `priority`.
    
    If you want to write it to the DOM, pass a string instead: priority="true" or priority={value.toString()}.

      62 |   describe('Word Sequence Cycling', () => {
      63 |     it('should cycle through all words in correct order', async () => {
    > 64 |       const { getByTestId } = render(<Home />);
         |                                     ^
      65 |       const rotatingText = getByTestId('rotating-text');
      66 |       
      67 |       const observer = new WordSequenceObserver(rotatingText);

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-cycling.test.tsx:64:37)

[Parallel Tests]   console.error
    Received `true` for a non-boolean attribute `priority`.
    
    If you want to write it to the DOM, pass a string instead: priority="true" or priority={value.toString()}.

      74 |   describe('Baseline Alignment', () => {
      75 |     it('should align rotating text baseline with static text baseline', async () => {
    > 76 |       const { getByTestId } = render(<Home />);
         |                                     ^
      77 |       
      78 |       const staticText = getByTestId('static-text');
      79 |       const rotatingText = getByTestId('rotating-text');

      at validateProperty (node_modules/react-dom/cjs/react-dom-client.development.js:3078:27)
      at warnUnknownProperties (node_modules/react-dom/cjs/react-dom-client.development.js:3154:9)
      at validatePropertiesInDevelopment (node_modules/react-dom/cjs/react-dom-client.development.js:17117:9)
      at setInitialProperties (node_modules/react-dom/cjs/react-dom-client.development.js:17741:7)
      at completeWork (node_modules/react-dom/cjs/react-dom-client.development.js:11391:18)
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at completeUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15268:19)
      at performUnitOfWork (node_modules/react-dom/cjs/react-dom-client.development.js:15149:11)
      at workLoopSync (node_modules/react-dom/cjs/react-dom-client.development.js:14956:41)
      at renderRootSync (node_modules/react-dom/cjs/react-dom-client.development.js:14936:11)
      at performWorkOnRoot (node_modules/react-dom/cjs/react-dom-client.development.js:14419:13)
      at performWorkOnRootViaSchedulerTask (node_modules/react-dom/cjs/react-dom-client.development.js:16216:7)
      at flushActQueue (node_modules/react/cjs/react.development.js:566:34)
      at Object.<anonymous>.process.env.NODE_ENV.exports.act (node_modules/react/cjs/react.development.js:859:10)
      at node_modules/@testing-library/react/dist/act-compat.js:47:25
      at renderRoot (node_modules/@testing-library/react/dist/pure.js:190:26)
      at render (node_modules/@testing-library/react/dist/pure.js:292:10)
      at Object.<anonymous> (__tests__/animations/rotating-text-alignment.test.tsx:76:37)

[Parallel Tests]   console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to LogoStaggerComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       setTimeout(() => {
      28 |         newAnimations[index] = true
    > 29 |         setLogoAnimations([...newAnimations])
         |         ^
      30 |       }, index * 150)
      31 |     })
      32 |   }, [logoAnimations])

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setLogoAnimations (__tests__/animations/logo-stagger.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {
    > 29 |         setCurrentWordIndex((prevIndex) => (prevIndex + 1) % rotatingWords.length)
         |         ^
      30 |         setAnimationState('entering')
      31 |         
      32 |         // Phase 3: After entrance completes, return to visible state

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (__tests__/animations/rotating-text.test.tsx:29:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

  console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      28 |       setTimeout(() => {
      29 |         setCurrentWordIndex((prevIndex) => (prevIndex + 1) % rotatingWords.length)
    > 30 |         setAnimationState('entering')
         |         ^
      31 |         
      32 |         // Phase 3: After entrance completes, return to visible state
      33 |         setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:30:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      32 |         // Phase 3: After entrance completes, return to visible state
      33 |         setTimeout(() => {
    > 34 |           setAnimationState('visible')
         |           ^
      35 |         }, 400) // Entrance animation duration
      36 |       }, 400) // Exit animation duration
      37 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:34:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests] FAIL __tests__/animations/logo-stagger.test.tsx
[Parallel Tests]   Logo Staggered Animations
    Staggered Animation Timing
      ✓ should render all logo elements initially without animation class (38 ms)
      ✕ should trigger animations in staggered sequence (25 ms)
      ✓ should start animations after initial delay (56 ms)
      ✓ should animate all logos within reasonable timeframe (10 ms)
    Animation CSS Properties
      ✓ should apply fade-in animation to animated logos (18 ms)
      ✓ should have proper CSS animation properties on animated elements (43 ms)
    Logo Content and Accessibility
      ✓ should render correct logo images with proper alt text (5 ms)
      ✓ should maintain logo visibility during and after animation (21 ms)
[Parallel Tests]       ✓ should have proper data attributes for testing (3 ms)
    Staggered Animation Utilities
      ✕ should work with StaggeredAnimationTester utility (11 ms)
    Performance and Efficiency
[Parallel Tests]       ✓ should not cause excessive re-renders (11 ms)
      ✓ should clean up timers on unmount (2 ms)
    Edge Cases
[Parallel Tests]       ✓ should handle empty logo array gracefully (1 ms)
      ✓ should handle component unmount during animation (1 ms)
      ✓ should work correctly with different numbers of logos (2 ms)

[Parallel Tests]   ● Logo Staggered Animations › Staggered Animation Timing › should trigger animations in staggered sequence

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 140
    Received:    100

      107 |       for (let i = 1; i < animationTimes.length; i++) {
      108 |         const delay = animationTimes[i] - animationTimes[i - 1]
    > 109 |         expect(delay).toBeGreaterThanOrEqual(140) // Allow 10ms tolerance
          |                       ^
      110 |         expect(delay).toBeLessThanOrEqual(160)
      111 |       }
      112 |     }, 5000)

      at Object.toBeGreaterThanOrEqual (__tests__/animations/logo-stagger.test.tsx:109:23)

  ● Logo Staggered Animations › Staggered Animation Utilities › should work with StaggeredAnimationTester utility

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 130
    Received:    100

      392 |     for (let i = 1; i < animationTimes.length; i++) {
      393 |       const delay = animationTimes[i] - animationTimes[i - 1]
    > 394 |       expect(delay).toBeGreaterThanOrEqual(this.expectedDelay - 20) // Allow tolerance
          |                     ^
      395 |       expect(delay).toBeLessThanOrEqual(this.expectedDelay + 20)
      396 |     }
      397 |   }

      at StaggeredAnimationTester.toBeGreaterThanOrEqual [as verifyStaggeredAnimation] (test-utils/keyframe-testing.ts:394:21)
      at Object.<anonymous> (__tests__/animations/logo-stagger.test.tsx:257:7)

[Parallel Tests]   console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      76 |       // If animation gets stuck, reset to visible state
      77 |       if (animationState !== 'visible') {
    > 78 |         setAnimationState('visible');
         |         ^
      79 |       }
      80 |     }, 2000); // Reset if stuck for more than 2 seconds
      81 |     

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:78:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (__tests__/animations/rotating-text-timing.test.tsx:57:10)

[Parallel Tests]   console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to RotatingTextComponent inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      23 |     const interval = setInterval(() => {
      24 |       // Phase 1: Start exit animation
    > 25 |       setAnimationState('exiting')
         |       ^
      26 |       
      27 |       // Phase 2: After exit completes, change word and start entrance
      28 |       setTimeout(() => {

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (__tests__/animations/rotating-text.test.tsx:25:7)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests] FAIL __tests__/animations/rotating-text.test.tsx
[Parallel Tests]   Rotating Text Animation States
    Animation State Machine
      ✓ should start in visible state (63 ms)
      ✕ should transition through all animation states correctly (47 ms)
      ✕ should change words during the entering phase (40 ms)
      ✕ should cycle through all words in correct order (34 ms)
    CSS Animation Properties
      ✓ should have correct keyframe animations for exiting state (23 ms)
      ✕ should have correct keyframe animations for entering state (23 ms)
    Animation Timing
      ✕ should complete each phase within expected timeframes (29 ms)
      ✕ should maintain consistent cycle timing (9 ms)
    Container Properties
      ✓ should have proper container styling to prevent cutoff (6 ms)
      ✓ should maintain text alignment with surrounding content (5 ms)
    React Key Prop Behavior
      ✕ should re-mount component when word changes due to key prop (14 ms)
    Error Resilience
      ✓ should handle rapid state changes gracefully (4 ms)
      ✕ should not get stuck in any particular state (25 ms)

[Parallel Tests]   ● Rotating Text Animation States › Animation State Machine › should transition through all animation states correctly

    expect(element).toHaveClass("rotating-text-entering")

    Expected the element to have class:
      rotating-text-entering
    Received:
      rotating-text rotating-text-exiting

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

       97 |       await waitFor(
       98 |         () => {
    >  99 |           expect(rotatingText).toHaveClass('rotating-text-entering')
          |                                ^
      100 |         },
      101 |         { timeout: 1000 }
      102 |       )

      at toHaveClass (__tests__/animations/rotating-text.test.tsx:99:32)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Rotating Text Animation States › Animation State Machine › should change words during the entering phase

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      120 |       await waitFor(
      121 |         () => {
    > 122 |           expect(rotatingText.textContent).not.toBe(initialWord)
          |                                                ^
      123 |         },
      124 |         { timeout: 5000 }
      125 |       )

      at toBe (__tests__/animations/rotating-text.test.tsx:122:48)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Rotating Text Animation States › Animation State Machine › should cycle through all words in correct order

    expect(received).toHaveLength(expected)

    Expected length: 2
    Received length: 1
    Received array:  ["Workplaces"]

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      145 |               observedWords.push(currentWord)
      146 |             }
    > 147 |             expect(observedWords).toHaveLength(i + 1)
          |                                   ^
      148 |           },
      149 |           { timeout: 4000 }
      150 |         )

      at toHaveLength (__tests__/animations/rotating-text.test.tsx:147:35)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Rotating Text Animation States › CSS Animation Properties › should have correct keyframe animations for entering state

    expect(element).toHaveClass("rotating-text-entering")

    Expected the element to have class:
      rotating-text-entering
    Received:
      rotating-text rotating-text-exiting

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      182 |       await waitFor(
      183 |         () => {
    > 184 |           expect(rotatingText).toHaveClass('rotating-text-entering')
          |                                ^
      185 |         },
      186 |         { timeout: 5000 }
      187 |       )

      at toHaveClass (__tests__/animations/rotating-text.test.tsx:184:32)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Rotating Text Animation States › Animation Timing › should complete each phase within expected timeframes

    expect(element).toHaveClass("rotating-text-visible")

    Expected the element to have class:
      rotating-text-visible
    Received:
      rotating-text rotating-text-exiting

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      211 |       await waitFor(
      212 |         () => {
    > 213 |           expect(rotatingText).toHaveClass('rotating-text-visible')
          |                                ^
      214 |         },
      215 |         { timeout: 2000 }
      216 |       )

  [Parallel Tests]     at toHaveClass (__tests__/animations/rotating-text.test.tsx:213:32)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Rotating Text Animation States › Animation Timing › should maintain consistent cycle timing

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      234 |         await waitFor(
      235 |           () => {
    > 236 |             expect(rotatingText.textContent).not.toBe(initialWord)
          |                                                  ^
      237 |           },
      238 |           { timeout: 4000 }
      239 |         )

      at toBe (__tests__/animations/rotating-text.test.tsx:236:50)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Rotating Text Animation States › React Key Prop Behavior › should re-mount component when word changes due to key prop

    expect(received).not.toBe(expected) // Object.is equality

    Expected: not "Workplaces"

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mApartments[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      294 |         () => {
      295 |           const currentWord = rotatingText.textContent
    > 296 |           expect(currentWord).not.toBe(initialWord)
          |                                   ^
      297 |         },
      298 |         { timeout: 5000 }
      299 |       )

      at toBe (__tests__/animations/rotating-text.test.tsx:296:35)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Rotating Text Animation States › Error Resilience › should not get stuck in any particular state

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 3
    Received:    2

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<div>[39m
            [36m<h1>[39m
              [0mPremium Amenity for Modern[0m
              [0m [0m
              [36m<span[39m
                [33mclass[39m=[32m"rotating-text-container"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"rotating-text rotating-text-visible"[39m
                  [33mdata-testid[39m=[32m"rotating-text"[39m
                [36m>[39m
                  [0mBusinesses[0m
                [36m</span>[39m
              [36m</span>[39m
            [36m</h1>[39m
          [36m</div>[39m
        [36m</div>[39m
      [36m</body>[39m
    [36m</html>[39m

      351 |       await waitFor(
      352 |         () => {
    > 353 |           expect(stateHistory.length).toBeGreaterThanOrEqual(3)
          |                                       ^
      354 |           expect(stateHistory).toContain('rotating-text-visible')
      355 |           expect(stateHistory).toContain('rotating-text-exiting')
      356 |           expect(stateHistory).toContain('rotating-text-entering')

      at toBeGreaterThanOrEqual (__tests__/animations/rotating-text.test.tsx:353:39)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.warn
    A function to advance timers was called but the timers APIs are not replaced with fake timers. Call `jest.useFakeTimers()` in this test file or enable fake timers for all tests by setting 'fakeTimers': {'enableGlobally': true} in Jest configuration file.
    Stack Trace:
    
          247 |   
          248 |   // Run any pending timers and restore real timers
        > 249 |   jest.runOnlyPendingTimers()
              |        ^
          250 |   jest.useRealTimers()
          251 |   
          252 |   // Reset scroll position
    
          Error: 
          at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:641:7)
          at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
          at Object.runOnlyPendingTimers (jest.setup.js:249:8)

      247 |   
      248 |   // Run any pending timers and restore real timers
    > 249 |   jest.runOnlyPendingTimers()
          |        ^
      250 |   jest.useRealTimers()
      251 |   
      252 |   // Reset scroll position

      at FakeTimers._checkFakeTimers (node_modules/@jest/fake-timers/build/index.js:639:28)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:541:14)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      56 |         if (animationState !== 'entering') {
      57 |           // Robust word cycling with safety checks
    > 58 |           setCurrentWordIndex((prevIndex) => {
         |           ^
      59 |             const nextIndex = getNextWordIndex(prevIndex, rotatingWords);
      60 |             return nextIndex;
      61 |           });

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setCurrentWordIndex (pages/index.tsx:58:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      60 |             return nextIndex;
      61 |           });
    > 62 |           setAnimationState('entering');
         |           ^
      63 |         }
      64 |       }
      65 |       

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:62:11)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      76 |       // If animation gets stuck, reset to visible state
      77 |       if (animationState !== 'visible') {
    > 78 |         setAnimationState('visible');
         |         ^
      79 |       }
      80 |     }, 2000); // Reset if stuck for more than 2 seconds
      81 |     

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimationState (pages/index.tsx:78:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests]   console.error
    An update to Home inside a test was not wrapped in act(...).
    
    When testing, code that causes React state updates should be wrapped into act(...):
    
    act(() => {
      /* fire events that update state */
    });
    /* assert on the output */
    
    This ensures that you're testing the behavior the user would see in the browser. Learn more at https://react.dev/link/wrap-tests-with-act

      61 |     for (let i = 0; i < count; i++) {
      62 |       const timeout = setTimeout(() => {
    > 63 |         setAnimatedItems(prev => {
         |         ^
      64 |           const newState = [...prev];
      65 |           newState[i] = true;
      66 |           return newState;

      at node_modules/react-dom/cjs/react-dom-client.development.js:16023:19
      at runWithFiberInDEV (node_modules/react-dom/cjs/react-dom-client.development.js:1522:13)
      at warnIfUpdatesNotWrappedWithActDEV (node_modules/react-dom/cjs/react-dom-client.development.js:16022:9)
      at scheduleUpdateOnFiber (node_modules/react-dom/cjs/react-dom-client.development.js:14396:11)
      at dispatchSetStateInternal (node_modules/react-dom/cjs/react-dom-client.development.js:6969:13)
      at dispatchSetState (node_modules/react-dom/cjs/react-dom-client.development.js:6927:7)
      at setAnimatedItems (hooks/useScrollAnimation.ts:63:9)
      at callTimer (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:806:24)
      at doTickInner (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1413:29)
      at doTick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1494:20)
      at Object.tick (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1502:20)
      at Object.runToLast (node_modules/@sinonjs/fake-timers/src/fake-timers-src.js:1661:26)
      at FakeTimers.runOnlyPendingTimers (node_modules/@jest/fake-timers/build/index.js:542:19)
      at Object.runOnlyPendingTimers (jest.setup.js:249:8)

[Parallel Tests] FAIL __tests__/pages/index.test.tsx
[Parallel Tests]   Home Page
    Basic Rendering
[Parallel Tests]       ✓ should render the hero section (136 ms)
      ✓ should render hero description (51 ms)
[Parallel Tests]       ✓ should render call-to-action button (99 ms)
      ✓ should render hero stats (36 ms)
    Rotating Text Animation
      ✓ should display initial rotating word (29 ms)
[Parallel Tests]       ✓ should have rotating text container with proper styling (26 ms)
[Parallel Tests]       ✕ should cycle through all rotating words (290 ms)
      ✓ should display each word in the rotation sequence (911 ms)
      ✕ should apply correct animation state classes (182 ms)
      ✕ should maintain text alignment with static text (21 ms)
[Parallel Tests]       ✕ should have proper container dimensions to prevent cutoff (19 ms)
    Hero Image
      ✕ should render hero image with proper alt text (18 ms)
    Hero Actions
      ✓ should navigate to request demo page when button clicked (26 ms)
      ✕ should have contact phone number link (37 ms)
    Services Showcase
      ✓ should render service cards (19 ms)
      ✓ should have service navigation buttons (17 ms)
    Company Logos Animation
      ✓ should render company logos (17 ms)
      ✓ should trigger staggered logo animations (37 ms)
    Responsive Design
      ✓ should adapt hero layout for mobile (25 ms)
[Parallel Tests]     Accessibility
[Parallel Tests]       ✓ should have proper heading hierarchy (29 ms)
      ✕ should have proper image alt texts (24 ms)
      ✕ should have accessible buttons and links (43 ms)

[Parallel Tests]   ● Home Page › Rotating Text Animation › should cycle through all rotating words

    expect(element).toHaveTextContent()

    Expected element to have text content:
      Apartments
    Received:
      Workplaces

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<header[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
            [33mdata-testid[39m=[32m"layout"[39m
            [33mrole[39m=[32m"banner"[39m
          [36m>[39m
            [36m<nav[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
              [33mrole[39m=[32m"navigation"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
              [36m>[39m
                [36m<a[39m
                  [33maria-label[39m=[32m"Home"[39m
                  [33mclass[39m=[32m"logo"[39m
                  [33mhref[39m=[32m"/"[39m
                [36m>[39m
                  [36m<img[39m
                    [33malt[39m=[32m"Golden Coast Amenities"[39m
                    [33mclass[39m=[32m"logo-image"[39m
                    [33mheight[39m=[32m"20"[39m
                    [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                    [33mwidth[39m=[32m"60"[39m
                  [36m/>[39m
                [36m</a>[39m
                [36m<button[39m
                  [33maria-expanded[39m=[32m"false"[39m
                  [33maria-label[39m=[32m"Toggle menu"[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                [36m</button>[39m
                [36m<ul[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                  [33mdata-testid[39m=[32m"mobile-menu"[39m
                [36m>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link active"[39m
                      [33mhref[39m=[32m"/"[39m
                    [36m>[39m
                      [0mHome[0m
                    [36m</a>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                      [33mhref[39m=[32m"/coffee-services"[39m
                    [36m>[39m
                      [0mServices[0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                      [36m>[39m
                        [0m▼[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<ul[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                    [36m>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services"[39m
                        [36m>[39m
                          [0mCoffee Services[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/mini-markets"[39m
                        [36m>[39m
                          [0mMini Markets[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/vending-machines"[39m
                        [36m>[39m
                          [0mVending Machines[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                      [36m/>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                        [36m>[39m
                          [0mGround & Whole Bean[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                        [36m>[39m
                          [0mAirpot Portion Packets[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/accessories"[39m
                        [36m>[39m
                          [0mAccessories[0m
                        [36m</a>[39m
                      [36m</li>[39m
                    [36m</ul>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link"[39m
                      [33mhref[39m=[32m"/shop"[39m
                    [36m>[39m
                      [0mShop[0m
                    [36m</a>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                      [33mhref[39m=[32m"/about"[39m
                    [36m>[39m
                      [0mCompany[0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                      [36m>[39m
                        [0m▼[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<ul[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                    [36m>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/about"[39m
                        [36m>[39m
                  ...

      26 |     await waitFor(
      27 |       () => {
    > 28 |         expect(this.element).toHaveTextContent(expectedWord)
         |                              ^
      29 |       },
      30 |       { timeout }
      31 |     )

      at t[Parallel Tests] oHaveTextContent (test-utils/animation-testing.ts:28:30)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Home Page › Rotating Text Animation › should apply correct animation state classes

    expect(element).toHaveClass("rotating-text-entering")

    Expected the element to have class:
      rotating-text-entering
    Received:
      jsx-aaab183f6ae3640f rotating-text rotating-text-exiting

    Ignored nodes: comments, script, style
    [36m<html>[39m
      [36m<head />[39m
      [36m<body>[39m
        [36m<div>[39m
          [36m<header[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
            [33mdata-testid[39m=[32m"layout"[39m
            [33mrole[39m=[32m"banner"[39m
          [36m>[39m
            [36m<nav[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
              [33mrole[39m=[32m"navigation"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
              [36m>[39m
                [36m<a[39m
                  [33maria-label[39m=[32m"Home"[39m
                  [33mclass[39m=[32m"logo"[39m
                  [33mhref[39m=[32m"/"[39m
                [36m>[39m
                  [36m<img[39m
                    [33malt[39m=[32m"Golden Coast Amenities"[39m
                    [33mclass[39m=[32m"logo-image"[39m
                    [33mheight[39m=[32m"20"[39m
                    [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                    [33mwidth[39m=[32m"60"[39m
                  [36m/>[39m
                [36m</a>[39m
                [36m<button[39m
                  [33maria-expanded[39m=[32m"false"[39m
                  [33maria-label[39m=[32m"Toggle menu"[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
                [36m>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                  [36m/>[39m
                [36m</button>[39m
                [36m<ul[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                  [33mdata-testid[39m=[32m"mobile-menu"[39m
                [36m>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link active"[39m
                      [33mhref[39m=[32m"/"[39m
                    [36m>[39m
                      [0mHome[0m
                    [36m</a>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                      [33mhref[39m=[32m"/coffee-services"[39m
                    [36m>[39m
                      [0mServices[0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                      [36m>[39m
                        [0m▼[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<ul[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                    [36m>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services"[39m
                        [36m>[39m
                          [0mCoffee Services[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/mini-markets"[39m
                        [36m>[39m
                          [0mMini Markets[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/vending-machines"[39m
                        [36m>[39m
                          [0mVending Machines[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                      [36m/>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                        [36m>[39m
                          [0mGround & Whole Bean[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                        [36m>[39m
                          [0mAirpot Portion Packets[0m
                        [36m</a>[39m
                      [36m</li>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
                        [36m<a[39m
                          [33mhref[39m=[32m"/coffee-services/accessories"[39m
                        [36m>[39m
                          [0mAccessories[0m
                        [36m</a>[39m
                      [36m</li>[39m
                    [36m</ul>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link"[39m
                      [33mhref[39m=[32m"/shop"[39m
                    [36m>[39m
                      [0mShop[0m
                    [36m</a>[39m
                  [36m</li>[39m
                  [36m<li[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                      [33mhref[39m=[32m"/about"[39m
                    [36m>[39m
                      [0mCompany[0m
                      [36m<span[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                      [36m>[39m
                        [0m▼[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<ul[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                    [36m>[39m
                      [36m<li[39m
                        [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                      [36m>[39m
           [Parallel Tests]              [36m<a[39m
                          [33mhref[39m=[32m"/about"[39m
                        [36m>[39m
                  ...

      77 |     await waitFor(
      78 |       () => {
    > 79 |         expect(this.element).toHaveClass(enteringClass)
         |                              ^
      80 |         expect(this.element).not.toHaveClass(exitingClass)
      81 |       },
      82 |       { timeout }

      at toHaveClass (test-utils/animation-testing.ts:79:30)
      at runWithExpensiveErrorDiagnosticsDisabled (node_modules/@testing-library/dom/dist/config.js:47:12)
      at checkCallback (node_modules/@testing-library/dom/dist/wait-for.js:124:77)
      at node_modules/@testing-library/dom/dist/wait-for.js:82:9

  ● Home Page › Rotating Text Animation › should maintain text alignment with static text

    expect(element).toHaveStyle()

    - Expected

    - display: inline-block;
    - position: relative;

      106 |       // Container should have proper positioning
      107 |       const container = rotatingText.parentElement
    > 108 |       expect(container).toHaveStyle({ 
          |                         ^
      109 |         display: 'inline-block',
      110 |         position: 'relative'
      111 |       })

      at Object.toHaveStyle (__tests__/pages/index.test.tsx:108:25)

  ● Home Page › Rotating Text Animation › should have proper container dimensions to prevent cutoff

    expect(received).toBeGreaterThanOrEqual(expected)

    Expected: >= 280
    Received:    NaN

      121 |       const computedStyle = window.getComputedStyle(container!)
      122 |       const minWidth = parseInt(computedStyle.minWidth)
    > 123 |       expect(minWidth).toBeGreaterThanOrEqual(280) // Based on our CSS fix
          |                        ^
      124 |     })
      125 |   })
      126 |

      at Object.toBeGreaterThanOrEqual (__tests__/pages/index.test.tsx:123:24)

  ● Home Page › Hero Image › should render hero image with proper alt text

    TestingLibraryElementError: Unable to find an element with the alt text: /modern office breakroom/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<header[39m
          [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
          [33mdata-testid[39m=[32m"layout"[39m
          [33mrole[39m=[32m"banner"[39m
        [36m>[39m
          [36m<nav[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
            [33mrole[39m=[32m"navigation"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
            [36m>[39m
              [36m<a[39m
                [33maria-label[39m=[32m"Home"[39m
                [33mclass[39m=[32m"logo"[39m
                [33mhref[39m=[32m"/"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Golden Coast Amenities"[39m
                  [33mclass[39m=[32m"logo-image"[39m
                  [33mheight[39m=[32m"20"[39m
                  [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                  [33mwidth[39m=[32m"60"[39m
                [36m/>[39m
              [36m</a>[39m
              [36m<button[39m
                [33maria-expanded[39m=[32m"false"[39m
                [33maria-label[39m=[32m"Toggle menu"[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
              [36m</button>[39m
              [36m<ul[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                [33mdata-testid[39m=[32m"mobile-menu"[39m
              [36m>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link active"[39m
                    [33mhref[39m=[32m"/"[39m
                  [36m>[39m
                    [0mHome[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/coffee-services"[39m
                  [36m>[39m
                    [0mServices[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m▼[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services"[39m
                      [36m>[39m
                        [0mCoffee Services[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/mini-markets"[39m
                      [36m>[39m
                        [0mMini Markets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/vending-machines"[39m
                      [36m>[39m
                        [0mVending Machines[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                    [36m/>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                      [36m>[39m
                        [0mGround & Whole Bean[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                      [36m>[39m
                        [0mAirpot Portion Packets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/accessories"[39m
                      [36m>[39m
                        [0mAccessories[0m
                      [36m</a>[39m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
           [Parallel Tests]          [33mclass[39m=[32m"nav-link"[39m
                    [33mhref[39m=[32m"/shop"[39m
                  [36m>[39m
                    [0mShop[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/about"[39m
                  [36m>[39m
                    [0mCompany[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m▼[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/about"[39m
                      [36m>[39m
                        [0mAbout Us[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/blog"[39m
                      [36m>[39m
                        [0mBlog[0m
            ...

      129 |       render(<Home />)
      130 |       
    > 131 |       const heroImage = screen.getByAltText(/modern office breakroom/i)
          |                                ^
      132 |       expect(heroImage).toBeInTheDocument()
      133 |       expect(heroImage).toHaveAttribute('src', '/images/hero-backgrounds/home/office-breakroom-hero.jpg')
      134 |     })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByAltText (__tests__/pages/index.test.tsx:131:32)

  ● Home Page › Hero Actions › should have contact phone number link

    TestingLibraryElementError: Found multiple elements with the role "link" and name `/909.258.9848/i`

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<a[39m
      [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
      [33mhref[39m=[32m"tel:909.258.9848"[39m
    [36m>[39m
      [0m909.258.9848[0m
    [36m</a>[39m

    Ignored nodes: comments, script, style
    [36m<a[39m
      [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-number"[39m
      [33mhref[39m=[32m"tel:909.258.9848"[39m
    [36m>[39m
      [0m909.258.9848[0m
    [36m</a>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<header[39m
          [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
          [33mdata-testid[39m=[32m"layout"[39m
          [33mrole[39m=[32m"banner"[39m
        [36m>[39m
          [36m<nav[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
            [33mrole[39m=[32m"navigation"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
            [36m>[39m
              [36m<a[39m
                [33maria-label[39m=[32m"Home"[39m
                [33mclass[39m=[32m"logo"[39m
                [33mhref[39m=[32m"/"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Golden Coast Amenities"[39m
                  [33mclass[39m=[32m"logo-image"[39m
                  [33mheight[39m=[32m"20"[39m
                  [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                  [33mwidth[39m=[32m"60"[39m
                [36m/>[39m
              [36m</a>[39m
              [36m<button[39m
                [33maria-expanded[39m=[32m"false"[39m
                [33maria-label[39m=[32m"Toggle menu"[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
              [36m</button>[39m
              [36m<ul[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                [33mdata-testid[39m=[32m"mobile-menu"[39m
              [36m>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link active"[39m
                    [33mhref[39m=[32m"/"[39m
                  [36m>[39m
                    [0mHome[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/coffee-services"[39m
                  [36m>[39m
                    [0mServices[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m▼[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services"[39m
                      [36m>[39m
                        [0mCoffee Services[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/mini-markets"[39m
                      [36m>[39m
                        [0mMini Markets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/vending-machines"[39m
                      [36m>[39m
                        [0mVending Machines[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                    [36m/>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                      [36m>[39m
                        [0mGround & Whole [Parallel Tests] Bean[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                      [36m>[39m
                        [0mAirpot Portion Packets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/accessories"[39m
                      [36m>[39m
                        [0mAccessories[0m
                      [36m</a>[39m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link"[39m
                    [33mhref[39m=[32m"/shop"[39m
                  [36m>[39m
                    [0mShop[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/about"[39m
                  [36m>[39m
                    [0mCompany[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m▼[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/about"[39m
                      [36m>[39m
                        [0mAbout Us[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/blog"[39m
                      [36m>[39m
                        [0mBlog[0m
            ...

      148 |       render(<Home />)
      149 |       
    > 150 |       const phoneLink = screen.getByRole('link', { name: /909.258.9848/i })
          |                                ^
      151 |       expect(phoneLink).toBeInTheDocument()
      152 |       expect(phoneLink).toHaveAttribute('href', 'tel:909.258.9848')
      153 |     })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (__tests__/pages/index.test.tsx:150:32)

  ● Home Page › Accessibility › should have proper image alt texts

    TestingLibraryElementError: Unable to find an element with the alt text: /modern office breakroom/i

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<header[39m
          [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
          [33mdata-testid[39m=[32m"layout"[39m
          [33mrole[39m=[32m"banner"[39m
        [36m>[39m
          [36m<nav[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
            [33mrole[39m=[32m"navigation"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
            [36m>[39m
              [36m<a[39m
                [33maria-label[39m=[32m"Home"[39m
                [33mclass[39m=[32m"logo"[39m
                [33mhref[39m=[32m"/"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Golden Coast Amenities"[39m
                  [33mclass[39m=[32m"logo-image"[39m
                  [33mheight[39m=[32m"20"[39m
                  [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                  [33mwidth[39m=[32m"60"[39m
                [36m/>[39m
              [36m</a>[39m
              [36m<button[39m
                [33maria-expanded[39m=[32m"false"[39m
                [33maria-label[39m=[32m"Toggle menu"[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
              [36m</button>[39m
              [36m<ul[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                [33mdata-testid[39m=[32m"mobile-menu"[39m
              [36m>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link active"[39m
                    [33mhref[39m=[32m"/"[39m
                  [36m>[39m
                    [0mHome[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/coffee-services"[39m
                  [36m>[39m
                    [0mServices[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m▼[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services"[39m
                      [36m>[39m
                        [0mCoffee Services[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/mini-markets"[39m
                      [36m>[39m
                        [0mMini Markets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/vending-machines"[39m
                      [36m>[39m
                        [0mVending [Parallel Tests] Machines[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                    [36m/>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                      [36m>[39m
                        [0mGround & Whole Bean[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                      [36m>[39m
                        [0mAirpot Portion Packets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/accessories"[39m
                      [36m>[39m
                        [0mAccessories[0m
                      [36m</a>[39m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link"[39m
                    [33mhref[39m=[32m"/shop"[39m
                  [36m>[39m
                    [0mShop[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/about"[39m
                  [36m>[39m
                    [0mCompany[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m▼[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/about"[39m
                      [36m>[39m
                        [0mAbout Us[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/blog"[39m
                      [36m>[39m
                        [0mBlog[0m
            ...

      223 |       render(<Home />)
      224 |       
    > 225 |       expect(screen.getByAltText(/modern office breakroom/i)).toBeInTheDocument()
          |                     ^
      226 |       expect(screen.getByAltText('Disney')).toBeInTheDocument()
      227 |     })
      228 |

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at node_modules/@testing-library/dom/dist/query-helpers.js:76:38
      at node_modules/@testing-library/dom/dist/query-helpers.js:52:17
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByAltText (__tests__/pages/index.test.tsx:225:21)

  ● Home Page › Accessibility › should have accessible buttons and links

    TestingLibraryElementError: Found multiple elements with the role "link" and name `/909.258.9848/i`

    Here are the matching elements:

    Ignored nodes: comments, script, style
    [36m<a[39m
      [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-phone"[39m
      [33mhref[39m=[32m"tel:909.258.9848"[39m
    [36m>[39m
      [0m909.258.9848[0m
    [36m</a>[39m

    Ignored nodes: comments, script, style
    [36m<a[39m
      [33mclass[39m=[32m"jsx-aaab183f6ae3640f contact-number"[39m
      [33mhref[39m=[32m"tel:909.258.9848"[39m
    [36m>[39m
      [0m909.258.9848[0m
    [36m</a>[39m

    (If this is intentional, then use the `*AllBy*` variant of the query (like `queryAllByText`, `getAllByText`, or `findAllByText`)).

    Ignored nodes: comments, script, style
    [36m<body>[39m
      [36m<div>[39m
        [36m<header[39m
          [33mclass[39m=[32m"jsx-9dd54e5854d760af header  "[39m
          [33mdata-testid[39m=[32m"layout"[39m
          [33mrole[39m=[32m"banner"[39m
        [36m>[39m
          [36m<nav[39m
            [33mclass[39m=[32m"jsx-9dd54e5854d760af nav"[39m
            [33mrole[39m=[32m"navigation"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-container"[39m
            [36m>[39m
              [36m<a[39m
                [33maria-label[39m=[32m"Home"[39m
                [33mclass[39m=[32m"logo"[39m
                [33mhref[39m=[32m"/"[39m
              [36m>[39m
                [36m<img[39m
                  [33malt[39m=[32m"Golden Coast Amenities"[39m
                  [33mclass[39m=[32m"logo-image"[39m
                  [33mheight[39m=[32m"20"[39m
                  [33msrc[39m=[32m"/images/logos/Golden Coast Amenities (3).svg"[39m
                  [33mwidth[39m=[32m"60"[39m
                [36m/>[39m
              [36m</a>[39m
              [36m<button[39m
                [33maria-expanded[39m=[32m"false"[39m
                [33maria-label[39m=[32m"Toggle menu"[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af menu-toggle"[39m
              [36m>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
                [36m<span[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                [36m/>[39m
              [36m</button>[39m
              [36m<ul[39m
                [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-menu "[39m
                [33mdata-testid[39m=[32m"mobile-menu"[39m
              [36m>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link active"[39m
                    [33mhref[39m=[32m"/"[39m
                  [36m>[39m
                    [0mHome[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/coffee-services"[39m
                  [36m>[39m
                    [0mServices[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m▼[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<[Parallel Tests] li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services"[39m
                      [36m>[39m
                        [0mCoffee Services[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/mini-markets"[39m
                      [36m>[39m
                        [0mMini Markets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/vending-machines"[39m
                      [36m>[39m
                        [0mVending Machines[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-divider"[39m
                    [36m/>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/ground-whole-bean"[39m
                      [36m>[39m
                        [0mGround & Whole Bean[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/airpot-portion-packets"[39m
                      [36m>[39m
                        [0mAirpot Portion Packets[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/coffee-services/accessories"[39m
                      [36m>[39m
                        [0mAccessories[0m
                      [36m</a>[39m
                    [36m</li>[39m
                  [36m</ul>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link"[39m
                    [33mhref[39m=[32m"/shop"[39m
                  [36m>[39m
                    [0mShop[0m
                  [36m</a>[39m
                [36m</li>[39m
                [36m<li[39m
                  [33mclass[39m=[32m"jsx-9dd54e5854d760af nav-item dropdown"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"nav-link dropdown-toggle "[39m
                    [33mhref[39m=[32m"/about"[39m
                  [36m>[39m
                    [0mCompany[0m
                    [36m<span[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-arrow"[39m
                    [36m>[39m
                      [0m▼[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<ul[39m
                    [33mclass[39m=[32m"jsx-9dd54e5854d760af dropdown-menu"[39m
                  [36m>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/about"[39m
                      [36m>[39m
                        [0mAbout Us[0m
                      [36m</a>[39m
                    [36m</li>[39m
                    [36m<li[39m
                      [33mclass[39m=[32m"jsx-9dd54e5854d760af"[39m
                    [36m>[39m
                      [36m<a[39m
                        [33mhref[39m=[32m"/blog"[39m
                      [36m>[39m
                        [0mBlog[0m
            ...

      233 |       expect(demoButton).toBeInTheDocument()
      234 |       
    > 235 |       const phoneLink = screen.getByRole('link', { name: /909.258.9848/i })
          |                                ^
      236 |       expect(phoneLink).toBeInTheDocument()
      237 |     })
      238 |   })

      at Object.getElementError (node_modules/@testing-library/dom/dist/config.js:37:19)
      at getElementError (node_modules/@testing-library/dom/dist/query-helpers.js:20:35)
      at getMultipleElementsFoundError (node_modules/@testing-library/dom/dist/query-helpers.js:23:10)
      at node_modules/@testing-library/dom/dist/query-helpers.js:55:13
      at node_modules/@testing-library/dom/dist/query-helpers.js:95:19
      at Object.getByRole (__tests__/pages/index.test.tsx:235:32)

[Parallel Tests] Test Suites: 1 failed, 1 total
Tests:       8 failed, 14 passed, 22 total
Snapshots:   0 total
Time:        4.648 s
Ran all test suites matching /__tests__\/pages/i.
[Parallel Tests] ERROR: "test:integration" exited with 1.
❌ Parallel Tests failed in 8.38s (exit code: 1)
